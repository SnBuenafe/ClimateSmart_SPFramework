[["index.html", "Exploring different climate-smart methods and approaches Chapter 1 Background", " Exploring different climate-smart methods and approaches Tin Buenafe 2022-02-09 Chapter 1 Background This code follows the workflow of SpatialPlanning repository. This project aims to create a holistic and flexible climate-smart marine spatial planning design using the Western Pacific as its template. To do this, we answer four key questions: How much more would a climate-smart spatial design cost, compared to a climate-uninformed spatial design? How does utilizing climate metrics calculated from different climatic variables change climate-smart spatial designs? How can we incorporate climate metrics into a marine reserve design workflow? What are the pros and cons of the different climate-smart marine reserve design approaches explored here? All of these questions are explored here through a series of analyses. prioritizr is used here to create and solve spatial planning problems. "],["preliminary.html", "Chapter 2 Preliminaries 2.1 Planning Region 2.2 Conservation Features 2.3 Cost Layer 2.4 Climate Layers", " Chapter 2 Preliminaries To create any spatial design, we need the following: Planning region Conservation features each with a representation target Cost layer And, since we’re creating climate-smart designs, we also need: Climate layers 2.1 Planning Region We chose the planning region to be the Western Pacific. (ggPU &lt;- fSpatPlan_PlotPUs(PUs, land)) We used \\(0.25^{\\circ} x 0.25^{\\circ}\\) resolution (\\(~670 km^2\\) per planning unit) and the Robinson projection. The entire planning region yielded a total of 35389 planning units. 2.2 Conservation Features We used species distribution maps AquaMaps (Kaschner 2019) as the conservation features. We restricted the species considered within the bounds of the planning region, within the epipelagic zone (0-200m depth), and occurring at &gt;= 0.5. Of the 33,518 species in AquaMaps, we considered 8712 species/features. For simplicity, we chose to use effective targets of 40% for all runs. (ggFeatureNo &lt;- fSpatPlan_FeatureNo(aqua_sf, land)) ## Warning: Transformation introduced infinite values in discrete y-axis 2.3 Cost Layer To calculate the cost layer, we multiplied the cost per kg (in US$/kg) of each species to their mean catch (in kg) (Watson 2017). (ggCost &lt;- fSpatPlan_PlotCost(cost, land)) 2.4 Climate Layers We explored 5 climate metrics, each of which was calculated from a multi-model ensemble of projected sea surface temperature, pH, and oxygen concentration. The ensemble was calculated from 5 GCMs (2015-2100) (CMIP6 2021), namely: 1. Can-ESM5, 2. CMCC-ESM2, 3. GFDL-ESM4, 4. IPSL-CM6A-LR, and 5. NorESM2-MM. The GCMs used were forced under three climate scenarios: 1. SSP 1-2.6, 2. SSP 2-4.5, and 3. SSP 5-8.5. The five climate metrics are the following: Rate of climate warming Rate of ocean acidification Rate of declining oxygen concentration Climate velocity Mean annual intensity of marine heatwaves Rates of climate warming, ocean acidification and declining oxygen concentration, and mean annual intensity of MHWs are exposure climate metrics. Climate velocity is a retention climate metric. 2.4.1 Rate of climate warming (gg_roc_tos_SSP126 + gg_roc_tos_SSP245) / (gg_roc_tos_SSP585 + plot_spacer()) + plot_layout(guides = &quot;collect&quot;) 2.4.2 Rate of ocean acidification (gg_roc_phos_SSP126 + gg_roc_phos_SSP245) / (gg_roc_phos_SSP585 + plot_spacer()) + plot_layout(guides = &quot;collect&quot;) 2.4.3 Rate of declining oxygen concentration (gg_roc_o2os_SSP126 + gg_roc_o2os_SSP245) / (gg_roc_o2os_SSP585 + plot_spacer()) + plot_layout(guides = &quot;collect&quot;) 2.4.4 Climate velocity (gg_velocity_SSP126 + gg_velocity_SSP245) / (gg_velocity_SSP585 + plot_spacer()) + plot_layout(guides = &quot;collect&quot;) References "],["rq-1.html", "Chapter 3 Research Question #1 3.1 Climate-uninformed spatial design 3.2 Climate-smart spatial design (Rate of Climate Warming; “Percentile” Approach) 3.3 Climate-uninformed versus Climate-smart spatial designs", " Chapter 3 Research Question #1 How much more would a climate-smart spatial design cost, compared to a climate-uninformed spatial design? To answer this question, we create a climate-uninformed spatial design. As the name suggests, it does not involve any climate layer in its design. It only utilizes the AquaMaps Layers and cost layer. The runs here show only those forced under SSP 5-8.5. Then, we compare it with a climate-smart spatial design. This design utilizes the same layers as the climate-uninformed design, with the addition of climate layers Here, we chose to use rate of climate warming as the climate layer. Hence, climate refugia (i.e. areas of low exposure) are defined as areas that have magnitudes of climate warming \\(\\leq\\) median climate warming. For this comparison, we chose to use the “percentile” approach, one of the three climate-smart approaches explored in this study. The two other approaches are detailed in the subsequent sections. In this approach, we incorporate the climate metric (i.e. rate of climate warming) into the spatial design as a “filtering metric” for the biodiversity/conservation features (i.e. AquaMaps species distribution maps). By this, I mean, we only retain the planning units of each specific feature if it coincides with its species’ climate refugia (i.e. planning unit has a climate warming value \\(\\leq\\) median climate warming of the feature). By doing so, we ensure that we only protect climate refugia if they have any biodiversity value. 3.1 Climate-uninformed spatial design We set up the climate-uninformed spatial planning problem: p1 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(0.4) %&gt;% # using 40% as the target percentage of protection add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) And we solve it: s1 &lt;- prioritizr::solve(p1) 3.2 Climate-smart spatial design (Rate of Climate Warming; “Percentile” Approach) We set up the climate-smart spatial planning problem: p2 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(0.8) %&gt;% # using Effective 40% Protection. Since we only retained planning units that intersect with both biodiversity features and areas &lt;= 50th percentile (0.5), by multiplying this by 0.8 target, we effectively protect only 40%. add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) And we solve it: s2 &lt;- prioritizr::solve(p2) 3.3 Climate-uninformed versus Climate-smart spatial designs We now compare the two designs. Total cost and percent area selected for protection: ggSummary_Cost + ggSummary_Area ggSummary_Warming + ggSummary_LogWarming Cohen’s Kappa Correlation Matrix: ## uninformed percentile_tos_585 ## uninformed 1.0000000 0.2492982 ## percentile_tos_585 0.2492982 1.0000000 "],["rq-2.html", "Chapter 4 Research Question 2 4.1 Climate-smart spatial design (Rate of Ocean Acidification; “Percentile” Approach) 4.2 Climate-smart spatial design (Rate of Declining Oxygen Concentration; “Percentile” Approach) 4.3 Climate-smart spatial design (Climate Velocity; “Percentile” Approach) 4.4 Comparisons across approaches", " Chapter 4 Research Question 2 How does utilizing climate metrics calculated from different climatic variables change climate-smart spatial designs? To answer this, we use the “percentile” approach and create different climate-smart spatial designs using different climate metrics. We have already created the climate-smart spatial design for rate of climate warming. 4.1 Climate-smart spatial design (Rate of Ocean Acidification; “Percentile” Approach) Here, climate refugia are defined as low exposure areas that have magnitudes of ocean acidification greater (or more positive) than the median. (Note: We don’t want a smaller value of pH or more acidic pH.) We create the spatial planning problem: p3 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(0.8) %&gt;% # using Effective 40% Protection. Since we only retained planning units that intersect with both biodiversity features and areas &gt;= 50th percentile (0.5), by multiplying this by 0.8 target, we effectively protect only 40%. add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) Then solve the problem: s3 &lt;- prioritizr::solve(p3) 4.2 Climate-smart spatial design (Rate of Declining Oxygen Concentration; “Percentile” Approach) Climate refugia are defined as low exposure areas that have magnitudes of declining oxygen concentration greater (or more positive) than the median. (Note: We don’t want a smaller value of oxygen.) We create the spatial planning problem: p4 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(0.8) %&gt;% # using Effective 40% Protection. Since we only retained planning units that intersect with both biodiversity features and areas &gt;= 50th percentile (0.5), by multiplying this by 0.8 target, we effectively protect only 40%. add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) Then, we solve it: s4 &lt;- prioritizr::solve(p4) 4.3 Climate-smart spatial design (Climate Velocity; “Percentile” Approach) Climate refugia are defined as high retention areas that climate velocity values less than the median. We create the spatial planning problem: p5 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(0.8) %&gt;% # using Effective 40% Protection. Since we only retained planning units that intersect with both biodiversity features and areas &lt;= 50th percentile (0.5), by multiplying this by 0.8 target, we effectively protect only 40%. add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) Then, we solve the problem: s5 &lt;- prioritizr::solve(p5) 4.4 Comparisons across approaches Total cost and percent area selected for protection: ggSummary_Cost + ggSummary_Area + plot_layout(guides = &quot;collect&quot;) Summary of climate metrics: Climate warming ggSummary_Warming + ggSummary_log_Warming + plot_layout(guides = &quot;collect&quot;) Ocean acidification ggSummary_Ocean_Acidification + ggSummary_log_Ocean_Acidification + plot_layout(guides = &quot;collect&quot;) Declining oxygen concentration ggSummary_Oxygen_Decline + ggSummary_log_Oxygen_Decline + plot_layout(guides = &quot;collect&quot;) Climate velocity ggSummary_Climate_Velocity + ggSummary_Log_Climate_Velocity + plot_layout(guides = &quot;collect&quot;) Cohen’s Kappa Correlation Matrix: ## uninformed temperature pH O2 velocity ## uninformed 1.0000000 0.2492982 0.2635496 0.2359780 0.2836742 ## temperature 0.2492982 1.0000000 0.3073411 0.7091660 0.4349728 ## pH 0.2635496 0.3073411 1.0000000 0.3104083 0.3563776 ## O2 0.2359780 0.7091660 0.3104083 1.0000000 0.3445141 ## velocity 0.2836742 0.4349728 0.3563776 0.3445141 1.0000000 "],["rq-3.html", "Chapter 5 Research Question 3 5.1 Climate-smart spatial designs under the “feature” approach 5.2 Climate-smart spatial designs under the “penalty” approach 5.3 Compare climate-smart spatial designs", " Chapter 5 Research Question 3 How can we incorporate climate metrics into a marine reserve design workflow? To answer this, we basically do what we did in Research Question 2, but for the other two approaches: “feature” and “penalty” approaches. The “feature” approach treats the climate metrics as features, with their own representation targets (i.e. conserving 40% of low exposure/high retention areas). The “penalty” approach treats the climate metrics as linear penalties, penalizing solutions that select areas of high exposure/low retention. Again, we only show results forced under SSP 5-8.5. We, however, don’t compare the results of the spatial designs created using the same approach. Instead, we compare them across approaches. To more effectively compare the approaches, we created low-regret areas, which are areas that are selected as climate refugia regardless of the climate metric used (for each approach). This is explored in greater detail in the next section where we aim to answer the differences between climate-smart strategies (metrics + approaches). In this section, we focus on creating the actual climate-smart spatial designs for “feature” and “percentile” approach. 5.1 Climate-smart spatial designs under the “feature” approach 5.1.1 Climate-smart spatial design (Rate of Climate Warming; “Feature” Approach) We first create the spatial planning problem: # using Effective 40% Protection. Since we only considered the climate_layer as 1s if they are under (or above for phos and o2os) the 50th percentile (0.5), we multiply it by 0.8 to get an effective protection of 40%. targets &lt;- features %&gt;% as_tibble() %&gt;% setNames(., &quot;Species&quot;) %&gt;% add_column(target = 0.4) %&gt;% mutate(target = ifelse(Species == &quot;climate_layer&quot;, 0.8, 0.4)) p6 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(targets$target) %&gt;% add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) We then solve this problem: s6 &lt;- prioritizr::solve(p6) 5.1.2 Climate-smart spatial design (Rate of Ocean Acidification; “Feature” Approach) We create the spatial planning problem: p7 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(targets$target) %&gt;% add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) We solve the problem: s7 &lt;- prioritizr::solve(p7) 5.1.3 Climate-smart spatial design (Rate of Declining Oxygen Concentration; “Feature” Approach) We create the spatial planning problem: p8 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(targets$target) %&gt;% add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) Then we solve it: s8 &lt;- prioritizr::solve(p8) 5.1.4 Climate-smart spatial design (Climate Velocity; “Feature” Approach) We then create the spatial planning problem: p9 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(targets$target) %&gt;% add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) Then solve it: s9 &lt;- prioritizr::solve(p9) For now, just check Cohen’s Kappa Correlation Matrix. All other summaries will be reported at the end of this section. ## uninformed feature_tos_585 feature_phos_585 feature_o2os_585 feature_velocity_585 ## uninformed 1.0000000 0.3865149 0.3178626 0.3501021 0.4040259 ## feature_tos_585 0.3865149 1.0000000 0.3949420 0.7575275 0.6439572 ## feature_phos_585 0.3178626 0.3949420 1.0000000 0.4139403 0.4250015 ## feature_o2os_585 0.3501021 0.7575275 0.4139403 1.0000000 0.5000843 ## feature_velocity_585 0.4040259 0.6439572 0.4250015 0.5000843 1.0000000 5.2 Climate-smart spatial designs under the “penalty” approach The penalty scaling for each of the designs is different. It’s calculated using the following equation: \\(scaling_{ClimateMetric}\\) \\(= \\frac{(Cost_{Max} - Cost_{Min})}{(ClimateMetric_{Max} - ClimateMetric_{Min})} \\cdot (Scaling_{percent})\\) 5.2.1 Climate-smart spatial design (Rate of Climate Warming; “Penalty” Approach) Set up the spatial planning problem: p10 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(0.4) %&gt;% # target is 40% for all features. add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) %&gt;% add_linear_penalties(scaling, data = &quot;slpTrends&quot;) Solve problem: s10 &lt;- prioritizr::solve(p10) 5.2.2 Climate-smart spatial design (Rate of Ocean Acidification; “Penalty” Approach) We create the problem: p11 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(0.4) %&gt;% # target is 40% for all features. add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) %&gt;% add_linear_penalties(scaling, data = &quot;slpTrends&quot;) Then solve it: s11 &lt;- prioritizr::solve(p11) 5.2.3 Climate-smart spatial design (Rate of Declining Oxygen Concentration; “Penalty” Approach) We create the problem: p12 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(0.4) %&gt;% # target is 40% for all features. add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) %&gt;% add_linear_penalties(scaling, data = &quot;slpTrends&quot;) We solve it: s12 &lt;- prioritizr::solve(p12) 5.2.4 Cliamte-smart spatial design (Climate velocity; “Penalty” Approach) Create the spatial planning problem: p13 &lt;- prioritizr::problem(out_sf, features, &quot;Cost_squish&quot;) %&gt;% add_min_set_objective() %&gt;% add_relative_targets(0.4) %&gt;% # target is 40% for all features. add_binary_decisions() %&gt;% add_gurobi_solver(gap = 0, verbose = FALSE) %&gt;% add_linear_penalties(scaling, data = &quot;voccMag&quot;) Solve it: s13 &lt;- prioritizr::solve(p13) Cohen’s Kappa Correlation Matrix: ## uninformed penalty_tos_585 penalty_phos_585 penalty_o2os_585 penalty_velocity_585 ## uninformed 1.0000000 0.5026312 0.5442304 0.5766637 0.6722008 ## penalty_tos_585 0.5026312 1.0000000 0.3853954 0.6710882 0.4575840 ## penalty_phos_585 0.5442304 0.3853954 1.0000000 0.4064749 0.5238846 ## penalty_o2os_585 0.5766637 0.6710882 0.4064749 1.0000000 0.4664162 ## penalty_velocity_585 0.6722008 0.4575840 0.5238846 0.4664162 1.0000000 5.3 Compare climate-smart spatial designs This part also partially answers the fourth research question. Total cost and percent area protected: ggComparison_Cost + ggComparison_Area + plot_layout(guides = &quot;collect&quot;) Climate warming: ggComparison_Warming + ggComparison_LogWarming + plot_layout(guides = &quot;collect&quot;) Ocean Acidification: ggComparison_OceanAcidification + ggComparison_LogOceanAcidification + plot_layout(guides = &quot;collect&quot;) Declining Oxygen Concentration: ggComparison_OxygenDecline + ggComparison_LogOxygenDecline + plot_layout(guides = &quot;collect&quot;) Climate velocity: ggComparison_ClimateVelocity + ggComparison_LogClimateVelocity + plot_layout(guides = &quot;collect&quot;) "],["rq-4.html", "Chapter 6 Research Question 4", " Chapter 6 Research Question 4 We have already partially answered this question in the previous section by comparing the statistics across each approach and metric. To partially answer the last research question, we primarily compare statistics of the low-regret areas created for each climate-smart approach. As mentioned in the previous section, these areas are selected as climate refugia regardless of the climate metric used (for each approach). Here are the low-regret areas for all approaches (ggLowRegret_Feature + ggLowRegret_Percentile) / (ggLowRegret_Penalty + plot_spacer()) + plot_layout(guides = &quot;collect&quot;) The summaries for each of the low-regret areas Cost and area: ggComparison_Cost_LowRegret + ggComparison_Area_LowRegret + plot_layout(guides = &quot;collect&quot;) Climate warming: ggComparison_Warming_LowRegret + ggComparison_LogWarming_LowRegret + plot_layout(guides = &quot;collect&quot;) Ocean acidification: ggComparison_OceanAcidification_LowRegret + ggComparison_LogOceanAcidification_LowRegret + plot_layout(guides = &quot;collect&quot;) Declining oxygen concentration: ggComparison_OxygenDecline_LowRegret + ggComparison_LogOxygenDecline_LowRegret + plot_layout(guides = &quot;collect&quot;) Climate velocity: ggComparison_ClimateVelocity_LowRegret + ggComparison_LogClimateVelocity_LowRegret + plot_layout(guides = &quot;collect&quot;) Cohen’s Kappa Correlation Matrix: ## LowRegret_Feature_585 LowRegret_Percentile_585 LowRegret_Penalty_585 ## LowRegret_Feature_585 1.0000000 0.5755817 0.3866217 ## LowRegret_Percentile_585 0.5755817 1.0000000 0.3148780 ## LowRegret_Penalty_585 0.3866217 0.3148780 1.0000000 Then, I create low-regret areas across all three low-regret spatial designs… just for the kicks of it. print(summary_lr) ## # A tibble: 1 × 5 ## sum_area total_cost percent_area num_pu run ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 2626678. 101445. 11.1 3921 LowRegret_All "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
