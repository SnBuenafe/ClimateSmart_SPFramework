coord_sf(xlim = st_bbox(roc_tos_SSP126)$xlim, ylim = st_bbox(roc_tos_SSP126)$ylim) +
theme_bw()
gg
#' ### Plot the climate layers
# Rates of Change in Temperature
# SSP 1-2.6
palette <- rev(brewer.pal(9, "YlGn"))
gg <- ggplot() +
geom_sf(data = roc_tos_SSP126, aes(fill = slpTrends), color = "grey64", size = 0.1, show.legend = TRUE) +
scale_fill_gradientn(name = expression('Δ mol m'^"-3"*' yr'^"-1"*''),
colors = palette,
limits = c(as.numeric(quantile(roc_tos_SSP126$slpTrends, 0.05)), as.numeric(quantile(roc_tos_SSP126$slpTrends, 0.95))),
oob = scales::squish) +
geom_sf(data = land, size = 0.05, fill = "grey20") +
coord_sf(xlim = st_bbox(roc_tos_SSP126)$xlim, ylim = st_bbox(roc_tos_SSP126)$ylim) +
theme_bw()
gg
fSpatPlan_PlotClimate <- function(ClimateLayer, world, metric, from, to){
if (metric == "velocity") {
fill = "voccMag"
palette = rev(brewer.pal(11, "RdYlBu"))
quantile = ClimateLayer$voccMag
expression = expression('km yr'^"-1"*'')
subtitle = "Climate Velocity"
} else if (metric %in% c("roc_tos", "roc_phos", "roc_o2os")) {
fill = "slpTrends"
quantile = ClimateLayer$slpTrends
if (metric == "roc_tos") {
palette = brewer.pal(9, "YlGn")
expression = expression('Δ'^"o"*'C yr'^"-1"*'')
subtitle = "Rate of Change in Temperature"
} else if (metric == "roc_phos") {
palette = rev(brewer.pal(9, "YlOrBr"))
expression = expression('Δ pH yr'^"-1"*'')
subtitle = "Rate of Change in pH"
} else if (metric == "roc_o2os") {
palette = rev(brewer.pal(9, "YlGnBu"))
expression = expression('Δ mol m'^"-3"*' yr'^"-1"*'')
subtitle = "Rate of Change in Oxygen"
}
}
gg <- ggplot() +
geom_sf(data = ClimateLayer, aes(fill = !!sym(fill)), color = NA, size = 0.1, show.legend = TRUE) +
geom_sf(data = world, colour = "grey20", fill = "grey20", alpha = 0.9, size = 0.1, show.legend = FALSE) +
coord_sf(xlim = st_bbox(ClimateLayer)$xlim, ylim = st_bbox(ClimateLayer)$ylim) +
scale_fill_gradientn(name = expression,
colors = palette,
limits = c(as.numeric(quantile(quantile, 0.05)), as.numeric(quantile(quantile, 0.95))),
oob = scales::squish)+
labs(fill = expression,
subtitle = subtitle) +
theme_bw()
}
fSpatPlan_PlotClimate <- function(ClimateLayer, world, metric){
if (metric == "velocity") {
fill = "voccMag"
palette = rev(brewer.pal(11, "RdYlBu"))
quantile = ClimateLayer$voccMag
expression = expression('km yr'^"-1"*'')
subtitle = "Climate Velocity"
} else if (metric %in% c("roc_tos", "roc_phos", "roc_o2os")) {
fill = "slpTrends"
quantile = ClimateLayer$slpTrends
if (metric == "roc_tos") {
palette = brewer.pal(9, "YlGn")
expression = expression('Δ'^"o"*'C yr'^"-1"*'')
subtitle = "Rate of Change in Temperature"
} else if (metric == "roc_phos") {
palette = rev(brewer.pal(9, "YlOrBr"))
expression = expression('Δ pH yr'^"-1"*'')
subtitle = "Rate of Change in pH"
} else if (metric == "roc_o2os") {
palette = rev(brewer.pal(9, "YlGnBu"))
expression = expression('Δ mol m'^"-3"*' yr'^"-1"*'')
subtitle = "Rate of Change in Oxygen"
}
}
gg <- ggplot() +
geom_sf(data = ClimateLayer, aes(fill = !!sym(fill)), color = NA, size = 0.1, show.legend = TRUE) +
geom_sf(data = world, colour = "grey20", fill = "grey20", alpha = 0.9, size = 0.1, show.legend = FALSE) +
coord_sf(xlim = st_bbox(ClimateLayer)$xlim, ylim = st_bbox(ClimateLayer)$ylim) +
scale_fill_gradientn(name = expression,
colors = palette,
limits = c(as.numeric(quantile(quantile, 0.05)), as.numeric(quantile(quantile, 0.95))),
oob = scales::squish)+
labs(fill = expression,
subtitle = subtitle) +
theme_bw()
}
#' ### Plot the climate layers
# Rates of Change in Temperature
# SSP 1-2.6
gg <- fSpatPlan_PlotClimate(ClimateLayer = roc_tos_SSP126, world = land, metric = "roc_tos")
gg
gg_roc_tos_SSP245 <- fSpatPlan_PlotClimate(ClimateLayer = roc_tos_SSP245, world = land, metric = "roc_tos")
gg_roc_tos_SSP245
gg_roc_tos_SSP585 <- fSpatPlan_PlotClimate(ClimateLayer = roc_tos_SSP585, world = land, metric = "roc_tos")
# Rates of Change in pH
gg_roc_phos_SSP126 <- fSpatPlan_PlotClimate(ClimateLayer = roc_phos_SSP126, world = land, metric = "roc_phos")
gg_roc_phos_SSP126
gg_roc_phos_SSP245 <- fSpatPlan_PlotClimate(ClimateLayer = roc_phos_SSP245, world = land, metric = "roc_phos")
gg_roc_phos_SSP245
gg_roc_phos_SSP585 <- fSpatPlan_PlotClimate(ClimateLayer = roc_phos_SSP585, world = land, metric = "roc_phos")
gg_roc_phos_SSP585
# Rates of Declining Oxygen Concentration
gg_roc_o2os_SSP126 <- fSpatPlan_PlotClimate(ClimateLayer = roc_o2os_SSP126, world = land, metric = "roc_o2os")
gg_roc_o2os_SSP126
gg_roc_o2os_SSP245 <- fSpatPlan_PlotClimate(ClimateLayer = roc_o2os_SSP245, world = land, metric = "roc_o2os")
gg_roc_o2os_SSP245
# Climate velocity
gg_velocity_SSP126 <- fSpatPlan_PlotClimate(ClimateLayer = velocity_SSP126, world = land, metric = "velocity")
gg_velocity_SSP126
gg_velocity_SSP245 <- fSpatPlan_PlotClimate(ClimateLayer = velocity_SSP245, world = land, metric = "velocity")
gg_velocity_SSP245
gg_velocity_SSP585 <- fSpatPlan_PlotClimate(ClimateLayer = velocity_SSP585, world = land, metric = "velocity")
gg_velocity_SSP585
#' ### Plot the climate layers
# Rates of Change in Temperature
gg_roc_tos_SSP126 <- fSpatPlan_PlotClimate(ClimateLayer = roc_tos_SSP126, world = land, metric = "roc_tos") + theme(axis.text = element_text(size = 25))
gg_roc_tos_SSP245 <- fSpatPlan_PlotClimate(ClimateLayer = roc_tos_SSP245, world = land, metric = "roc_tos") + theme(axis.text = element_text(size = 25))
gg_roc_tos_SSP585 <- fSpatPlan_PlotClimate(ClimateLayer = roc_tos_SSP585, world = land, metric = "roc_tos") + theme(axis.text = element_text(size = 25))
# Rates of Change in pH
gg_roc_phos_SSP126 <- fSpatPlan_PlotClimate(ClimateLayer = roc_phos_SSP126, world = land, metric = "roc_phos") + theme(axis.text = element_text(size = 25))
gg_roc_phos_SSP245 <- fSpatPlan_PlotClimate(ClimateLayer = roc_phos_SSP245, world = land, metric = "roc_phos") + theme(axis.text = element_text(size = 25))
gg_roc_phos_SSP585 <- fSpatPlan_PlotClimate(ClimateLayer = roc_phos_SSP585, world = land, metric = "roc_phos") + theme(axis.text = element_text(size = 25))
# Rates of Declining Oxygen Concentration
gg_roc_o2os_SSP126 <- fSpatPlan_PlotClimate(ClimateLayer = roc_o2os_SSP126, world = land, metric = "roc_o2os") + theme(axis.text = element_text(size = 25))
gg_roc_o2os_SSP245 <- fSpatPlan_PlotClimate(ClimateLayer = roc_o2os_SSP245, world = land, metric = "roc_o2os") + theme(axis.text = element_text(size = 25))
gg_roc_o2os_SSP585 <- fSpatPlan_PlotClimate(ClimateLayer = roc_o2os_SSP585, world = land, metric = "roc_o2os") + theme(axis.text = element_text(size = 25))
# Climate velocity
gg_velocity_SSP126 <- fSpatPlan_PlotClimate(ClimateLayer = velocity_SSP126, world = land, metric = "velocity") + theme(axis.text = element_text(size = 25))
gg_velocity_SSP245 <- fSpatPlan_PlotClimate(ClimateLayer = velocity_SSP245, world = land, metric = "velocity") + theme(axis.text = element_text(size = 25))
gg_velocity_SSP585 <- fSpatPlan_PlotClimate(ClimateLayer = velocity_SSP585, world = land, metric = "velocity") + theme(axis.text = element_text(size = 25))
ggsave("Layer_RateOfClimateWarming_SSP126.png",
plot = gg_roc_tos_SSP126, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_RateOfClimateWarming_SSP245.png",
plot = gg_roc_tos_SSP245, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_RateOfClimateWarming_SSP585.png",
plot = gg_roc_tos_SSP585, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_RateOfOceanAcidification_SSP126.png",
plot = gg_roc_phos_SSP126, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_RateOfOceanAcidification_SSP245.png",
plot = gg_roc_phos_SSP245, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_RateOfOceanAcidification_SSP585.png",
plot = gg_roc_phos_SSP585, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_RateOfDecliningOxygen_SSP126.png",
plot = gg_roc_o2os_SSP126, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_RateOfDecliningOxygen_SSP245.png",
plot = gg_roc_o2os_SSP245, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_RateOfDecliningOxygen_SSP585.png",
plot = gg_roc_o2os_SSP585, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_ClimateVelocity_SSP126.png",
plot = gg_velocity_SSP126, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_ClimateVelocity_SSP245.png",
plot = gg_velocity_SSP245, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave("Layer_ClimateVelocity_SSP585.png",
plot = gg_velocity_SSP585, width = 7, height = 5, dpi = 300,
path = "Figures/")
#' ### Climate-smart spatial design (Rate of Declining Oxygen Concentration)
#' 1. Prepare climate layer
# Intersect this with climate layer, select only those >= 65th percentile. Greater, because you don't want low oxygen.
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP126, PUs = PUs)
#' 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
#' 3. Set up the spatial planning problem
# targets should be the same as the last climate-smart run
# print(targets)
out_sf <- cbind(aqua_percentile, roc_tos_SSP126, UniformCost)
# Uniform Cost (Using the Area)
UniformCost <- PUs %>%
dplyr::mutate(cost = PU_size)
#' 3. Set up the spatial planning problem
# targets should be the same as the last climate-smart run
# print(targets)
out_sf <- cbind(aqua_percentile, roc_tos_SSP126, UniformCost)
p38 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
#' 4. Solve the planning problem
s38 <- prioritizr::solve(p38)
ggSol38 <- fSpatPlan_PlotSolution(s38_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Climate Warming", subtitle = "Percentile, SSP 1-2.6") + theme(axis.text = element_text(size = 25))
#' 5. Plot the spatial design
s38_plot <- s38 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol38 <- fSpatPlan_PlotSolution(s38_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Climate Warming", subtitle = "Percentile, SSP 1-2.6") + theme(axis.text = element_text(size = 25))
ggSol38
summary <- read_csv("Output/summary/summary_statistics.csv")
summary
summary %<>% dplyr::select(-X1)
#' SSP 2-4.5; Percentile (Climate Warming)
#' 1. Prepare climate layer
# Intersect this with climate layer, select only those <= 35th percentile.
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP245, PUs = PUs)
#' 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
#' 3. Set up the spatial planning problem
# targets should be the same as the last climate-smart run
# print(targets)
out_sf <- cbind(aqua_percentile, roc_tos_SSP245, UniformCost)
p39 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
#' 4. Solve the planning problem
s39 <- prioritizr::solve(p39)
# Different scenarios
solution_list <- list(s38, s39)
fileLabel_list <- c("s38-percentile-tos-126.rds", "s39-percentile-tos-245.rds")
#### Saving solutions ####
# Saving solutions
output_solutions <- "Output/solutions/"
for(i in 1:length(solution_list)) {
saveRDS(solution_list[[i]], paste0(output_solutions, fileLabel_list[i]))
}
s2 <- readRDS("Output/solutions/s2-percentile-tos-585.rds")
s39_plot
#' 5. Plot the spatial design
s39_plot <- s39 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol39 <- fSpatPlan_PlotSolution(s39_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Climate Warming", subtitle = "Percentile, SSP 1-2.6") + theme(axis.text = element_text(size = 25))
ggSol39
ggSol39 <- fSpatPlan_PlotSolution(s39_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Climate Warming", subtitle = "Percentile, SSP 2-4.5") + theme(axis.text = element_text(size = 25))
#### Different climate scenarios ####
ggsave(filename = "EnsembleMean_Percentile_tos_126.png",
plot = ggSol38, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "EnsembleMean_Percentile_tos_245.png",
plot = ggSol39, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
summary
feat_rep <- read_csv("Output/summary/feature_representation.csv")
feat_rep %<>% dplyr::select(-X1)
# Feature representation
list <- c("percentile_tos_126", "percentile_tos_245")
problem_list <- list(p38, p39)
solution_list <- list(s38, s39)
for (i in 1:length(list)) {
tmp_df <- represent_feature(problem_list[[i]], solution_list[[i]], list[i])
feat_rep <- left_join(tmp_df, feat_rep)
}
# Computing summaries
run_list <- c("percentile_tos_126", "percentile_tos_245")
solution_list <- list(s38, s39)
emptyList <- list()
for (i in 1:length(run_list)) {
emptyList[[i]] <- compute_summary(solution_list[[i]], total_area, PU_size, run_list[i], Cost = "cost")
}
total_area = PU_size * nrow(PUs)
total_area
for (i in 1:length(run_list)) {
emptyList[[i]] <- compute_summary(solution_list[[i]], total_area, PU_size, run_list[i], Cost = "cost")
}
climateSummary <- do.call(rbind, emptyList)
# Get the mean rate of climate warming for all designs
warming <- get_ClimateSummary(solution_list, climate_layer = roc_tos_SSP126, metric = "tos", col_scenario = "585", col_approach = "percentile", col_run = run_list) %>%
left_join(., climateSummary)
# Get the mean rate of climate warming for all designs
warming <- get_ClimateSummary(solution_list, climate_layer = roc_tos_SSP126, metric = "tos", col_scenario = "126", col_approach = "percentile", col_run = run_list) %>%
left_join(., climateSummary)
warming
warming1 <- get_ClimateSummary(solution_list, climate_layer = roc_tos_SSP245, metric = "tos", col_scenario = "245", col_approach = "percentile", col_run = run_list) %>%
left_join(., warming)
warming1
# Get the mean rate of climate warming for all designs
warming <- get_ClimateSummary(solution_list, climate_layer = roc_tos_SSP126, metric = "tos", col_scenario = "126", col_approach = "percentile", col_run = run_list) %>%
left_join(., climateSummary)
warming1 <- get_ClimateSummary(solution_list, climate_layer = roc_tos_SSP245, metric = "tos", col_scenario = "245", col_approach = "percentile", col_run = run_list) %>%
rbind(., warming)
warming
get_ClimateSummary(solution_list, climate_layer = roc_tos_SSP245, metric = "tos", col_scenario = "245", col_approach = "percentile", col_run = run_list)
warming1 <- get_ClimateSummary(solution_list, climate_layer = roc_tos_SSP245, metric = "tos", col_scenario = "245", col_approach = "percentile", col_run = run_list) %>%
full_join(., warming, by =c("run", "approach", "scenario"))
warming 1
warming1
climateSummary
# Get the mean rate of climate warming for all designs
warming <- get_ClimateSummary(list(s38), climate_layer = roc_tos_SSP126, metric = "tos", col_scenario = "126", col_approach = "percentile", col_run = run_list) %>%
left_join(., climateSummary)
warming
warming1 <- get_ClimateSummary(list(s39), climate_layer = roc_tos_SSP245, metric = "tos", col_scenario = "245", col_approach = "percentile", col_run = run_list) %>%
full_join(., warming)
warming1
# Get the mean rate of climate warming for all designs
warming <- get_ClimateSummary(list(s38), climate_layer = roc_tos_SSP126, metric = "tos", col_scenario = "126", col_approach = "percentile", col_run = run_list[1]) %>%
left_join(., climateSummary)
warming1 <- get_ClimateSummary(list(s39), climate_layer = roc_tos_SSP245, metric = "tos", col_scenario = "245", col_approach = "percentile", col_run = run_list[2]) %>%
full_join(., warming)
warming1
climateSummary
# Get the mean rate of climate warming for all designs
warming <- get_ClimateSummary(list(s38), climate_layer = roc_tos_SSP126, metric = "tos", col_scenario = "126", col_approach = "percentile", col_run = run_list[1])
warming1 <- get_ClimateSummary(list(s39), climate_layer = roc_tos_SSP245, metric = "tos", col_scenario = "245", col_approach = "percentile", col_run = run_list[2]) %>%
full_join(., warming) %>%
left_join(., climateSummary)
warming1
#' Get Kappa Correlation Matrix
list <- c("percentile_tos_126", "percentile_tos_245")
object_list <- list() # empty list
solution_list <- list(s38, s39)
for (i in 1:length(list)) {
obj <- select_solution(solution_list[[i]], list[i])
object_list[[i]] <- obj
}
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
#' Get Kappa Correlation Matrix
list <- c("percentile_tos_126", "percentile_tos_245", "percentile_tos_585")
object_list <- list() # empty list
solution_list <- list(s38, s39, s2)
for (i in 1:length(list)) {
obj <- select_solution(solution_list[[i]], list[i])
object_list[[i]] <- obj
}
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
compute_summary(solution_list, total_area, PU_size, run_name = list, Cost = "cost")
solution_list
solution_list <- list(s38, s39)
# Feature representation
list <- c("percentile_tos_126", "percentile_tos_245")
compute_summary(solution_list, total_area, PU_size, run_name = list, Cost = "cost")
compute_summary(solution_list[[1]], total_area, PU_size, run_name = list[1], Cost = "cost")
compute_summary(solution_list[[1]], total_area, PU_size, run_name = list[1], Cost = "cost") %>%
rbind(., compute_summary(solution_list[[2]], total_area, PU_size, run_name = list[2], Cost = "cost"))
compute_summary(solution_list[[1]], total_area, PU_size, run_name = list[1], Cost = "cost") %>%
rbind(., compute_summary(solution_list[[2]], total_area, PU_size, run_name = list[2], Cost = "cost"))
summary
df <- compute_summary(solution_list[[1]], total_area, PU_size, run_name = list[1], Cost = "cost") %>%
rbind(., compute_summary(solution_list[[2]], total_area, PU_size, run_name = list[2], Cost = "cost"))
xx <- summary %>% add_row(df)
xx
feat_rep
df <- compute_summary(solution_list[[1]], total_area, PU_size, run_name = list[1], Cost = "cost") %>%
rbind(., compute_summary(solution_list[[2]], total_area, PU_size, run_name = list[2], Cost = "cost"))
summary %<>% add_row(df)
#### Saving solutions ####
# Saving solutions
output_solutions <- "Output/solutions/"
# Saving feature representation
summary_directory <- "Output/summary/"
write.csv(feat_rep, paste0(summary_directory, "feature_representation.csv"))
# Saving summaries
write.csv(summary, paste0(summary_directory, "summary_statistics.csv"))
#' ### Low-regret Areas
#' To create low-regret climate-smart design, we should only select areas that have been selected for all climate-smart designs utilizing different climate scenarios
# Select solutions for all climate-smart designs
solution_list <- list(s2, s38, s39)
col_names <- c("penalty_tos_126", "penalty_tos_245", "penalty_tos_585")
LowRegret_ClimateScenario <- create_LowRegretSf(solution_list, col_names, PUs)
(gg_LowRegretClimateScenario <- plot_lowregret(LowRegret_ClimateScenario, land) + theme(axis.text = element_text(size = 25)))
gg_LowRegretClimateScenario
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_Penalty, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "all")
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_ClimateScenario, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "all")
print(LowRegret_SummaryClimateScenario)
# Create low regret areas for specific approach
create_LowRegretSf <- function(solution_list, col_names, PUs) {
df <- list() # empty list
for (i in 1:length(col_names)) {
df[[i]] <- solution_list[[i]] %>% dplyr::select(solution_1) %>%
rename(!!sym(col_names[i]) := solution_1) %>%
as_tibble()
}
tmp <- df[[1]]
for (i in 2:length(col_names)) {
tmp <- tmp %>%
left_join(df[[i]], .)
}
tmp %<>% dplyr::select(-geometry) %>%
mutate(selection = rowSums(., na.rm = TRUE)) %>%
dplyr::mutate(cellID = row_number())
PUs_temp <- PUs %>%
dplyr::mutate(cellID = row_number())
# Create the low-regret sf object
low_regret <- full_join(tmp, PUs_temp, by = "cellID") %>%
st_as_sf(sf_column_name = "geometry") %>%
left_join(., UniformCost %>% as_tibble(), by = "geometry") %>%
st_as_sf(sf_column_name = "geometry") %>%
dplyr::mutate(solution_1 = ifelse(selection == 3, 1, 0))
return(low_regret)
}
LowRegret_ClimateScenario <- create_LowRegretSf(solution_list, col_names, PUs)
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_ClimateScenario, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "all")
print(LowRegret_SummaryClimateScenario)
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv")
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1)
LowRegretSummary
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1) %>%
add_row(., LowRegret_SummaryClimateScenario)
LowRegret_SummaryClimateScenario
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1) %>%
rbind(., LowRegret_SummaryClimateScenario)
add_row(LowRegretSummary, LowRegret_SummaryClimateScenario)
LowRegretSummary
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_ClimateScenario, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "126245585")
print(LowRegret_SummaryClimateScenario)
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1) %>%
add_row(., LowRegret_SummaryClimateScenario)
LowRegretSummary
View(LowRegretSummary)
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1)
LowRegretSummary
df <- LowRegretSummary %>%
add_row(., LowRegret_SummaryClimateScenario)
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_ClimateScenario, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "126")
print(LowRegret_SummaryClimateScenario)
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1)
df <- LowRegretSummary %>%
add_row(., LowRegret_SummaryClimateScenario)
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_ClimateScenario, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = 126245585)
print(LowRegret_SummaryClimateScenario)
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1)
df <- LowRegretSummary %>%
add_row(., LowRegret_SummaryClimateScenario)
df
LowRegretSummary %<>%
add_row(., LowRegret_SummaryClimateScenario)
LowRegretSummary
write.csv(LowRegret_SummaryAll, paste0(summary_directory, "LowRegret_summary_statistics.csv"))
write.csv(LowRegret_Summary, paste0(summary_directory, "LowRegret_summary_statistics.csv"))
write.csv(LowRegretSummary, paste0(summary_directory, "LowRegret_summary_statistics.csv"))
LowRegretSummary
View(LowRegretSummary)
gg_LowRegretClimateScenario
# Save Low-regret areas and summaries for multiple cliamte scenarios
ggsave(filename = "LowRegret_ClimateScenario.png",
plot = gg_LowRegretClimateScenario, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggSummary_Area <- plot_statistics(summary %>% filter(run == "percentile"), col_name = "percent_area", y_axis = "% area", color = 1) + theme(axis.text = element_text(size = 25))
ggSummary_Area
summary %>% filter(run == "percentile")
summary
ggSummary_Area <- plot_statistics(summary %>% filter(approach == "percentile"), col_name = "percent_area", y_axis = "% area", color = 1) + theme(axis.text = element_text(size = 25))
ggSummary_Area
View(summary)
ggSummary_Area <- plot_statistics(summary %>% filter(run %in% c("percentile_tos_126", "percentile_tos_245", "percentile_tos_585") ), col_name = "percent_area", y_axis = "% area", color = 1) + theme(axis.text = element_text(size = 25))
ggSummary_Area
summary %>% filter(run %in% c("percentile_tos_126", "percentile_tos_245", "percentile_tos_585")
)
# Plot statistics
plot_statistics <- function(summary, col_name, y_axis, color) {
if (color == 1) { # For plotting related to RQ2
color_legend <- c("tos" = "#289E3D", "phos" = "#E6C173", "o2os" = "#81B0CC", "velocity" = "#855600")
summary %<>% dplyr::mutate(approach = case_when(str_detect(run, pattern = "tos") ~ "tos",
str_detect(run, pattern = "phos") ~ "phos",
str_detect(run, pattern = "o2os") ~ "o2os",
str_detect(run, pattern = "velocity") ~ "velocity"))
} else if (color == 2) { # For plotting related to RQ1
color_legend <- c("uninformed" = "#a6611a", "tos" = "#dfc27d")
summary %<>% dplyr::mutate(approach = case_when(str_detect(run, pattern = "uninformed") ~ "uninformed",
str_detect(run, pattern = "tos") ~ "tos"))
} else if (color == 3) { # For plotting vs scenarios
summary %<>% dplyr::mutate(approach = case_when(run == "percentile_tos_585" ~ "SSP 5-8.5",
run == "percentile_tos_126" ~ "SSP 1-2.6",
run == "percentile_tos_245" ~ "SSP 2-4.5"))
color_legend <- c("SSP 1-2.6" = "#289E3D", "SSP 2-4.5" = "#E6C173", "SSP 5-8.5" = "#855600")
}
plot <- ggplot(data = summary, aes(x = as.factor(approach))) + # TODO: add in aes (later on) group = scenario
geom_bar(aes_string(y = col_name, fill = "as.factor(approach)"), stat = 'identity', position = position_dodge()) +
scale_fill_manual(name = 'Run',
values = color_legend) +
xlab("Run") +
ylab(y_axis) +
theme(legend.position = "bottom") +
theme_classic()
return(plot)
}
ggSummary_Area <- plot_statistics(summary %>% filter(run %in% c("percentile_tos_126", "percentile_tos_245", "percentile_tos_585") ), col_name = "percent_area", y_axis = "% area", color = 3) + theme(axis.text = element_text(size = 25))
ggSummary_Area
ggSol38 + ggSol39
ggsave(filename = "LowRegret_ClimateScenario_Area.png",
plot = ggSummary_Area, width = 7, height = 5, dpi = 300,
path = "Figures/")
source("HelperFunctions/SpatPlan_Extras.R") # Load the extras, including functions and libraries
