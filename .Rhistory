ggsave(filename = "LowRegretArea_585.png",
plot = ggComparison_Area_LowRegret, width = 7, height = 5, dpi = 300,
path = "Figures/")
#' Create selection frequency of these
solution_list <- list(s19, s20, s21, s22, s23)
col_names <- c("phos_CanESM5", "phos_CMCC-ESM2", "phos_GFDL-ESM4", "phos_IPSL-CM6A-LR", "phos_NorESM2-MM")
Selection_phosEnsemble_Frequency <- create_LowRegretSf(solution_list, col_names, PUs)
gg_Selection_phosEnsemble_Frequency <- plot_SelectionFrequency(Selection_phosEnsemble_Frequency, land) + theme(axis.text = element_text(size = 25))
ggsave(filename = 'MultiModelEnsemble_Percentile_phos_585.png',
plot = gg_Selection_phosEnsemble_Frequency, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
gg_Selection_tosEnsemble_Frequency
## Saving plots
# Multi Model Ensemble Selection Frequency (Percentile)
ggsave(filename = 'MultiModelEnsemble_Percentile_tos_585.png',
plot = gg_Selection_tosEnsemble_Frequency, width = 21, height = 29.7, dpi = 300,
path = 'Figures/')
#' Create selection frequency of these
solution_list <- list(s24, s25, s26, s27, s28)
col_names <- c("o2os_CanESM5", "o2os_CMCC-ESM2", "o2os_GFDL-ESM4", "o2os_IPSL-CM6A-LR", "o2os_NorESM2-MM")
Selection_o2osEnsemble_Frequency <- create_LowRegretSf(solution_list, col_names, PUs)
gg_Selection_o2osEnsemble_Frequency <- plot_SelectionFrequency(Selection_o2osEnsemble_Frequency, land) + theme(axis.text = element_text(size = 25))
ggsave(filename = 'MultiModelEnsemble_Percentile_o2os_585.png',
plot = gg_Selection_o2osEnsemble_Frequency, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
#' Create selection frequency of these
solution_list <- list(s29, s30, s31, s32, s33)
col_names <- c("velocity_CanESM5", "velocity_CMCC-ESM2", "velocity_GFDL-ESM4", "velocity_IPSL-CM6A-LR", "velocity_NorESM2-MM")
Selection_velocityEnsemble_Frequency <- create_LowRegretSf(solution_list, col_names, PUs)
gg_Selection_velocityEnsemble_Frequency <- plot_SelectionFrequency(Selection_velocityEnsemble_Frequency, land) + theme(axis.text = element_text(size = 25))
ggsave(filename = 'MultiModelEnsemble_Percentile_velocity_585.png',
plot = gg_Selection_velocityEnsemble_Frequency, width = 21, height = 29.7, dpi = 300,
path = 'Figures/')
aqua_sf$Katsuwonus_pelamis
colnames(aqua_sf)
match("Katsuwonus_pelamis",colnames(aqua_sf))
#### Creating some plots explaining the different approaches ####
aqm_subset1 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[4289]) %>%
dplyr::mutate(Katsuwonus_pelamis = as.logical(Katsuwonus_pelamis))
aqm1_Plot <- plot_AQMFeatures(aqm_subset1, PUs, land, column = "Katsuwonus_pelamis") + ggtitle("Species Distribution #1", subtitle = "Katsuwonuspelamis") + theme(axis.text = element_text(size = 25))
aqm1_Plot
aqm1_percentile <- create_PercentileLayer(aqua_sf = aqm_subset1, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585, PUs = PUs) %>%
dplyr::mutate(Katsuwonus_pelamis = as.logical(Katsuwonus_pelamis))
aqm1_PercentilePlot <- plot_AQMFeatures(aqm1_percentile, PUs, land, column = "Katsuwonus_pelamis") + ggtitle("Species Distribution #1", subtitle = "Katsuwonus pelamis") + theme(axis.text = element_text(size = 25))
aqm1_PercentilePlot
match("Natator_depressus", colnames(aqua_sf))
colnames(aqua_sf) %>% as_tibble() %>% print(n = Inf)
match("Eretmochelys imbricata", colnames(aqua_sf))
match("Eretmochelys_imbricata", colnames(aqua_sf))
aqm_subset2 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[3042]) %>%
dplyr::mutate(Eretmochelys_imbricata = as.logical(Eretmochelys_imbricata))
aqm2_Plot <- plot_AQMFeatures(aqm_subset2, PUs, land, column = "Eretmochelys_imbricata") + ggtitle("Species Distribution #1", subtitle = "Eretmochelys imbricata") + theme(axis.text = element_text(size = 25))
aqm2_Plot
match("Thunnus_thynnus", colnames(aqua_sf))
match("Thunnus_orientalis", colnames(aqua_sf))
aqm_subset2 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[8199]) %>%
dplyr::mutate(Thunnus_orientalis = as.logical(Thunnus_orientalis))
aqm2_Plot <- plot_AQMFeatures(aqm_subset2, PUs, land, column = "Thunnus_orientalis") + ggtitle("Species Distribution #1", subtitle = "Thunnus orientalis") + theme(axis.text = element_text(size = 25))
aqm2_percentile <- create_PercentileLayer(aqua_sf = aqm_subset2, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585, PUs = PUs) %>%
dplyr::mutate(Thunnus_orientalis = as.logical(Thunnus_orientalis))
aqm2_Plot
aqm2_PercentilePlot <- plot_AQMFeatures(aqm2_percentile, PUs, land, column = "Thunnus_orientalis") + ggtitle("Species Distribution #1", subtitle = "Thunnus_orientalis") + theme(axis.text = element_text(size = 25))
aqm2_PercentilePlot
# Percentile workflow figures
ggsave(filename = "01a_Percentile_AquaMapsSubset.png",
plot = aqm1_Plot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "01b_Percentile_AquaMapsSubset.png",
plot = aqm1_PercentilePlot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "02a_Percentile_AquaMapsSubset.png",
plot = aqm2_Plot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "02b_Percentile_AquaMapsSubset.png",
plot = aqm2_PercentilePlot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
### Features
gg_roc_tos_SSP585 <- fSpatPlan_PlotClimate(roc_tos_SSP585, land, metric = "roc_tos", from = 0.02, to = 0.05) + theme(axis.text = element_text(size = 25))
ClimateFeature <- create_FeatureLayer(aqua_sf, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585) %>%
dplyr::select(climate_layer, geometry) %>%
dplyr::mutate(climate_layer = as.logical(climate_layer))
featsub <- plot_AQMFeatures(ClimateFeature, PUs, land, column = "climate_layer") + ggtitle("Low Exposure Areas") + theme(axis.text = element_text(size = 25))
# Feature workflow figures
ggsave(filename = "01_Feature_Climate.png",
plot = gg_roc_tos_SSP585, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "02_Feature_Climate.png",
plot = featsub, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
#' ## Preliminaries
source("HelperFunctions/SpatPlan_Extras.R") # Load the extras, including functions and libraries
source("HelperFunctions/SpatPlan_HelperFxns_WestPac.R") # Load helper functions written specifically for this spatial planning project
#' ## Load files
save_name <- "WestPacific"
PU_size = 669.9 # km2 (0.25 deg at equator)
Shape <- "Hexagon" # "Shape of PUs
#' ### Planning Region
PUs <- read_rds(file.path("Output", paste(save_name, "PU", paste0(PU_size,"km2"), "Output.rds", sep = "_")))
land <- ne_countries(scale = 'large', returnclass = 'sf') %>%
fSpatPlan_Convert2PacificRobinson() # Land masses; needed for plotting
#' ### Climate Metrics
#' 1. Rates of Climate Warming
ClimateLayer_path <- "Data/Climate/ClimateMetrics/RateOfChange/tos/"
ClimateLayer_files <- list.files(ClimateLayer_path)
roc_tos_SSP585 <- readRDS(file.path("Output",
paste(save_name, "PU", paste0(PU_size, "km2"),
ClimateLayer_files[3], sep = "_")))
#' 2. Rates of Ocean Acidification
ClimateLayer_path <- "Data/Climate/ClimateMetrics/RateOfChange/phos/"
ClimateLayer_files <- list.files(ClimateLayer_path)
roc_phos_SSP585 <- readRDS(file.path("Output",
paste(save_name, "PU", paste0(PU_size, "km2"),
ClimateLayer_files[3], sep = "_")))
#' 3. Rates of Declining Oxygen Concentration
ClimateLayer_path <- "Data/Climate/ClimateMetrics/RateOfChange/o2os/"
ClimateLayer_files <- list.files(ClimateLayer_path)
roc_o2os_SSP585 <- readRDS(file.path("Output",
paste(save_name, "PU", paste0(PU_size, "km2"),
ClimateLayer_files[3], sep = "_")))
#' 4. Climate Velocity
ClimateLayer_path <- "Data/Climate/ClimateMetrics/ClimateVelocity/"
ClimateLayer_files <- list.files(ClimateLayer_path)
velocity_SSP585 <- readRDS(file.path("Output",
paste(save_name, "PU", paste0(PU_size, "km2"),
ClimateLayer_files[3], sep = "_")))
#' 5. Annual marine heatwave intensity
# Conservation Features
aqua_sf <- read_rds(file.path("Output",
paste(save_name, "PU", paste0(PU_size,"km2"),
"AquaMaps_Output.rds", sep = "_")))
# Changing to 1s and 0s
CutOff = 0.5
subset_aqua_sf <- aqua_sf %>%
as_tibble() %>%
dplyr::select(Doryrhamphus_excisus.excisus, Padina_sanctae.crucis, Platybelone_argalus.platyura,
Tylosurus_acus.acus, Tylosurus_acus.melanotus)
aqua_sf <- aqua_sf %>%
mutate_at(vars(colnames(subset_aqua_sf)),
funs(case_when(. >= CutOff ~ 1,
. <= CutOff ~ 0,
is.na(.) ~ 0)))
# Uniform Cost (Using the Area)
UniformCost <- PUs %>%
dplyr::mutate(cost = PU_size)
#' # Climate warming
#' 1. Prepare the climate layers and features
ImptFeat <- create_ImportantFeatureLayer(aqua_sf, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585)
RepFeat <- create_RepresentationFeature(ImptFeat, aqua_sf)
Features <- cbind(ImptFeat, RepFeat) %>%
dplyr::select(-geometry.1)
#' 2. Get list of features
features <- Features %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
targets <- features %>% as_tibble() %>%
setNames(., "Species") %>%
add_column(target = 1) %>%
mutate(target = ifelse(str_detect(Species, pattern = ".1"), 25/95, 1))
#' 3. Set up the spatial planning problem
out_sf <- cbind(Features, roc_tos_SSP585, UniformCost)
p34 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(targets$target) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
#' 4. Solve the planning problem
s34 <- prioritizr::solve(p34)
#' 5. Plot the spatial design
s34_plot <- s34 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol34 <- fSpatPlan_PlotSolution(s34_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Climate Warming", subtitle = "Important Feature, SSP 5-8.5")
#' # Ocean acidification
#' 1. Prepare the climate layers and features
ImptFeat <- create_ImportantFeatureLayer(aqua_sf, metric_name = "phos", colname = "slpTrends", metric_df = roc_phos_SSP585)
RepFeat <- create_RepresentationFeature(ImptFeat, aqua_sf)
Features <- cbind(ImptFeat, RepFeat) %>%
dplyr::select(-geometry.1)
#' 2. Get list of features
features <- Features %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
targets <- features %>% as_tibble() %>%
setNames(., "Species") %>%
add_column(target = 1) %>%
mutate(target = ifelse(str_detect(Species, pattern = ".1"), 25/95, 1))
targets
unique(targets$target)
#' 3. Set up the spatial planning problem
out_sf <- cbind(Features, roc_phos_SSP585, UniformCost)
p35 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(targets$target) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
#' 4. Solve the planning problem
s35 <- prioritizr::solve(p35)
#' 5. Plot the spatial design
s35_plot <- s35 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol35 <- fSpatPlan_PlotSolution(s35_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Ocean Acidification", subtitle = "Important Feature, SSP 5-8.5")
#' # Declining Oxygen Concentration
#' 1. Prepare the climate layers and features
ImptFeat <- create_ImportantFeatureLayer(aqua_sf, metric_name = "o2os", colname = "slpTrends", metric_df = roc_o2os_SSP585)
RepFeat <- create_RepresentationFeature(ImptFeat, aqua_sf)
Features <- cbind(ImptFeat, RepFeat) %>%
dplyr::select(-geometry.1)
#' 2. Get list of features
features <- Features %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
targets <- features %>% as_tibble() %>%
setNames(., "Species") %>%
add_column(target = 1) %>%
mutate(target = ifelse(str_detect(Species, pattern = ".1"), 0.25, 1))
targets <- features %>% as_tibble() %>%
setNames(., "Species") %>%
add_column(target = 1) %>%
mutate(target = ifelse(str_detect(Species, pattern = ".1"), 25/95, 1))
#' 3. Set up the spatial planning problem
out_sf <- cbind(Features, roc_o2os_SSP585, UniformCost)
p36 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(targets$target) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
#' 4. Solve the planning problem
s36 <- prioritizr::solve(p36)
#' 5. Plot the spatial design
s36_plot <- s36 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol36 <- fSpatPlan_PlotSolution(s36_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Declining Oxygen Concentration", subtitle = "Important Feature, SSP 5-8.5")
#' # Climate Velocity
#' 1. Prepare the climate layers and features
ImptFeat <- create_ImportantFeatureLayer(aqua_sf, metric_name = "velocity", colname = "voccMag", metric_df = velocity_SSP585)
RepFeat <- create_RepresentationFeature(ImptFeat, aqua_sf)
Features <- cbind(ImptFeat, RepFeat) %>%
dplyr::select(-geometry.1)
#' 2. Get list of features
features <- Features %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
targets <- features %>% as_tibble() %>%
setNames(., "Species") %>%
add_column(target = 1) %>%
mutate(target = ifelse(str_detect(Species, pattern = ".1"), 25/95, 1))
#' 3. Set up the spatial planning problem
out_sf <- cbind(Features, velocity_SSP585, UniformCost)
p37 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(targets$target) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
#' 4. Solve the planning problem
s37 <- prioritizr::solve(p37)
#' 5. Plot the spatial design
s37_plot <- s37 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol37 <- fSpatPlan_PlotSolution(s37_plot, PUs, land) + ggtitle("Climate-smart design: Climate Velocity", subtitle = "Important Feature, SSP 5-8.5")
# Important feature approach
solution_list <- list(s34, s35, s36, s37)
fileLabel_list <- c("s34-imptfeature-tos-585.rds", "s35-imptfeature-phos-585.rds", "s36-imptfeature-o2os-585.rds", "s37-imptfeature-velocity-585.rds")
# Saving solutions
output_solutions <- "Output/solutions/"
for(i in 1:length(solution_list)) {
saveRDS(solution_list[[i]], paste0(output_solutions, fileLabel_list[i]))
}
# Feature representation
list <- c("imptfeature_tos_585", "imptfeature_phos_585", "imptfeature_o2os_585", "imptfeature_velocity_585")
problem_list <- list(p34, p35, p36, p37)
solution_list <- list(s34, s35, s36, s37)
for (i in 1:length(list)) {
tmp_df <- represent_feature(problem_list[[i]], solution_list[[i]], list[i])
feat_rep <- left_join(tmp_df, feat_rep)
}
feat_rep <- read_csv("Output/summary/feature_representation.csv")
feat_rep %<>% dplyr::select(-X1)
View(feat_rep)
for (i in 1:length(list)) {
tmp_df <- represent_feature(problem_list[[i]], solution_list[[i]], list[i])
feat_rep <- left_join(tmp_df, feat_rep)
}
# Computing summaries for all "Important Feature" approach designs
run_list <- c("imptfeature_tos_585", "imptfeature_phos_585", "imptfeature_o2os_585",
"imptfeature_velocity_585")
solution_list <- list(s34, s35, s36, s37)
emptyList <- list()
for (i in 1:length(run_list)) {
emptyList[[i]] <- compute_summary(solution_list[[i]], total_area, PU_size, run_list[i], Cost = "cost")
}
feat_rep
feat_rep
feat_rep %<>% dplyr::select(-imptfeature_velocity_585, -imptfeature_o2os_585, -imptfeature_phos_585, -imptfeature_tos_585)
# Feature representation
list <- c("imptfeature_tos_585", "imptfeature_phos_585", "imptfeature_o2os_585", "imptfeature_velocity_585")
problem_list <- list(p34, p35, p36, p37)
solution_list <- list(s34, s35, s36, s37)
for (i in 1:length(list)) {
tmp_df <- represent_feature(problem_list[[i]], solution_list[[i]], list[i])
feat_rep <- left_join(tmp_df, feat_rep)
}
feat_rep
View(feat_reppp)
View(feat_re)
View(feat_rep)
summary
summary <- read_csv("Output/summary/summary_statistics.csv")
summary
summary %<>% dplyr::select(-X1)
summary %<>% dplyr::filter(approach == "imptfeature")
summary
summary <- read_csv("Output/summary/summary_statistics.csv")
summary %<>% dplyr::select(-X1)
summary %<>% dplyr::filter(approach != "imptfeature")
summary
# Computing summaries for all "Important Feature" approach designs
run_list <- c("imptfeature_tos_585", "imptfeature_phos_585", "imptfeature_o2os_585",
"imptfeature_velocity_585")
solution_list <- list(s34, s35, s36, s37)
emptyList <- list()
for (i in 1:length(run_list)) {
emptyList[[i]] <- compute_summary(solution_list[[i]], total_area, PU_size, run_list[i], Cost = "cost")
}
total_area = PU_size * nrow(PUs)
total_area
for (i in 1:length(run_list)) {
emptyList[[i]] <- compute_summary(solution_list[[i]], total_area, PU_size, run_list[i], Cost = "cost")
}
imptFeatSummary <- do.call(rbind, emptyList)
# Get the mean rate of climate warming for all designs
warming <- get_ClimateSummary(solution_list, climate_layer = roc_tos_SSP585, metric = "tos", col_scenario = "585", col_approach = "imptfeature", col_run = run_list) %>%
left_join(., imptFeatSummary)
# Get the mean rate of ocean acidification for all designs
acidification <- get_ClimateSummary(solution_list, climate_layer = roc_phos_SSP585, metric = "phos", col_scenario = "585", col_approach = "imptfeature", col_run = run_list) %>%
left_join(., warming, by = c("run", "scenario", "approach"))
# Get the mean rate of declining oxygen concentration for all designs
oxygen <- get_ClimateSummary(solution_list, climate_layer = roc_o2os_SSP585, metric = "o2os", col_scenario = "585", col_approach = "imptfeature", col_run = run_list) %>%
left_join(., acidification, by = c("run", "scenario", "approach"))
# Get the mean climate velocity for all designs, then bind it with the summary
summary <- get_ClimateSummary(solution_list, climate_layer = velocity_SSP585, metric = "velocity", col_scenario = "585", col_approach = "imptfeature", col_run = run_list) %>%
left_join(., oxygen, by = c("run", "scenario", "approach")) %>%
rbind(., summary)
head(summary)
#' Get Kappa Correlation Matrix
list <- c("imptfeature_tos_585", "imptfeature_phos_585", "imptfeature_o2os_585", "imptfeature_velocity_585")
object_list <- list() # empty list
solution_list <- list(s34, s35, s36, s37)
for (i in 1:length(list)) {
obj <- select_solution(solution_list[[i]], list[i])
object_list[[i]] <- obj
}
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
#' ### Low-regret Areas
#' To create low-regret climate-smart design, we should only select areas that have been selected for all climate-smart designs utilizing different climate metrics
# Select solutions for all climate-smart designs
solution_list <- list(s34, s35, s36, s37)
col_names <- c("imptfeature_tos_585", "imptfeature_phos_585", "imptfeature_o2os_585", "imptfeature_velocity_585")
LowRegret_ImptFeature <- create_LowRegretSf(solution_list, col_names, PUs)
gg_LowRegretImptFeature <- plot_lowregret(LowRegret_ImptFeature, land) + theme(axis.text = element_text(size = 25))
#' Check low-regret summary
LowRegret_SummaryImptFeature <- compute_summary(LowRegret_ImptFeature, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "imptfeature", scenario = "585")
print(LowRegret_SummaryImptFeature)
# Kappa
list <- c("LowRegret_Feature_585", "LowRegret_Percentile_585", "LowRegret_Penalty_585", "LowRegret_ImptFeature_585")
object_list <- list() # empty list
solution_list <- list(LowRegret_Feature, LowRegret_Percentile, LowRegret_Penalty, LowRegret_SummaryImptFeature)
# Important feature approach
ggsave(filename = "EnsembleMean_ImptFeature_tos_585.png",
plot = ggSol34, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "EnsembleMean_ImptFeature_phos_585.png",
plot = ggSol35, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "EnsembleMean_ImptFeature_o2os_585.png",
plot = ggSol36, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "EnsembleMean_ImptFeature_velocity_585.png",
plot = ggSol37, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "LowRegret_ImptFeature_585.png",
plot = gg_LowRegretImptFeature, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
s2 <- readRDS("Output/solutions/s2-percentile-tos-585.rds")
s3 <- readRDS("Output/solutions/s3-percentile-phos-585.rds")
s4 <- readRDS("Output/solutions/s4-percentile-o2os-585.rds")
s5 <- readRDS("Output/solutions/s5-percentile-velocity-585.rds")
#' ### Low-regret Areas
#' To create low-regret climate-smart design, we should only select areas that have been selected for all climate-smart designs utilizing different climate metrics
# Select solutions for all climate-smart designs
solution_list <- list(s2, s3, s4, s5)
col_names <- c("percentile_tos_585", "percentile_phos_585", "percentile_o2os_585", "percentile_velocity_585")
LowRegret_Percentile <- create_LowRegretSf(solution_list, col_names, PUs)
#' Check low-regret summary
LowRegret_SummaryPercentile <- compute_summary(LowRegret_Percentile, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "585")
print(LowRegret_SummaryPercentile)
s6 <- readRDS("Output/solutions/s6-feature-tos-585.rds")
s7 <- readRDS("Output/solutions/s7-feature-phos-585.rds")
s8 <- readRDS("Output/solutions/s8-feature-o2os-585.rds")
s9 <- readRDS("Output/solutions/s9-feature-velocity-585.rds")
#' ### Low-regret Areas
#' To create low-regret climate-smart design, we should only select areas that have been selected for all climate-smart designs utilizing different climate metrics
# Select solutions for all climate-smart designs
solution_list <- list(s6, s7, s8, s9)
col_names <- c("feature_tos_585", "feature_phos_585", "feature_o2os_585", "feature_velocity_585")
LowRegret_Feature <- create_LowRegretSf(solution_list, col_names, PUs)
#' Check low-regret summary
LowRegret_SummaryFeature <- compute_summary(LowRegret_Feature, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "feature", scenario = "585")
print(LowRegret_SummaryFeature)
s10 <- readRDS("Output/solutions/s10-penalty-tos-585.rds")
s11 <- readRDS("Output/solutions/s11-penalty-phos-585.rds")
s12 <- readRDS("Output/solutions/s12-penalty-o2os-585.rds")
s13 <- readRDS("Output/solutions/s13-penalty-velocity-585.rds")
#' ### Low-regret Areas
#' To create low-regret climate-smart design, we should only select areas that have been selected for all climate-smart designs utilizing different climate metrics
# Select solutions for all climate-smart designs
solution_list <- list(s10, s11, s12, s13)
col_names <- c("penalty_tos_585", "penalty_phos_585", "penalty_o2os_585", "penalty_velocity_585")
LowRegret_Penalty <- create_LowRegretSf(solution_list, col_names, PUs)
#' Check low-regret summary
LowRegret_SummaryPenalty <- compute_summary(LowRegret_Penalty, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "penalty", scenario = "585")
print(LowRegret_SummaryPenalty)
# Kappa
list <- c("LowRegret_Feature_585", "LowRegret_Percentile_585", "LowRegret_Penalty_585", "LowRegret_ImptFeature_585")
object_list <- list() # empty list
solution_list <- list(LowRegret_Feature, LowRegret_Percentile, LowRegret_Penalty, LowRegret_SummaryImptFeature)
for (i in 1:length(list)) {
obj <- select_solution(solution_list[[i]], list[i])
object_list[[i]] <- obj
}
LowRegret_ImptFeature
solution_list <- list(LowRegret_Feature, LowRegret_Percentile, LowRegret_Penalty, LowRegret_ImptFeature)
for (i in 1:length(list)) {
obj <- select_solution(solution_list[[i]], list[i])
object_list[[i]] <- obj
}
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
LowRegret_SummaryAll <- LowRegret_SummaryFeature %>%
rbind(., LowRegret_SummaryPercentile) %>%
rbind(., LowRegret_SummaryPenalty) %>%
rbind(., LowRegret_SummaryImptFeature)
# Check the Climate Metrics of the Low-Regret Areas
LowRegretFeature_df <- LowRegret_Feature %>%
as_tibble() %>%
dplyr::select(-feature_velocity_585, -feature_o2os_585, -feature_phos_585, -feature_tos_585, -cost) %>%
dplyr::rename(SelectionFeature = selection) %>%
left_join(., roc_tos_SSP585 %>% as_tibble() %>% dplyr::select(slpTrends, geometry), by = "geometry") %>%
dplyr::rename(tos = slpTrends, Feature_Solution = solution_1) %>%
left_join(., roc_phos_SSP585 %>% as_tibble() %>% dplyr::select(slpTrends, geometry), by = "geometry") %>%
dplyr::rename(phos = slpTrends) %>%
left_join(., roc_o2os_SSP585 %>% as_tibble() %>% dplyr::select(slpTrends, geometry), by = "geometry") %>%
dplyr::rename(o2os = slpTrends) %>%
left_join(., velocity_SSP585 %>% as_tibble() %>% dplyr::select(voccMag, geometry), by = "geometry") %>%
dplyr::rename(velocity = voccMag)
LowRegretPercentile_df <- LowRegret_Percentile %>%
as_tibble() %>%
dplyr::select(-percentile_velocity_585, -percentile_o2os_585, -percentile_phos_585, -percentile_tos_585, -cost) %>%
dplyr::rename(SelectionPercentile = selection, Percentile_Solution = solution_1)
LowRegretPenalty_df <- LowRegret_Penalty %>%
as_tibble() %>%
dplyr::select(-penalty_velocity_585, -penalty_o2os_585, -penalty_phos_585, -penalty_tos_585, -cost) %>%
dplyr::rename(SelectionPenalty = selection, Penalty_Solution = solution_1)
LowRegretImptFeature_df <- LowRegret_ImptFeature %>%
as_tibble() %>%
dplyr::select(-imptfeature_velocity_585, -imptfeature_o2os_585, -imptfeature_phos_585, -imptfeature_tos_585, -cost) %>%
dplyr::rename(SelectionImptFeature = selection, ImptFeature_Solution = solution_1)
LowRegretAll_sf <- left_join(LowRegretFeature_df, LowRegretPercentile_df, by = c("cellID", "geometry")) %>%
left_join(., LowRegretPenalty_df, by = c("cellID", "geometry")) %>%
left_join(., LowRegretImptFeature_df, by = c("cellID", "geometry")) %>%
dplyr::mutate(SelectionAll = case_when((SelectionFeature == 4 & SelectionPercentile == 4 & SelectionPenalty == 4 & SelectionImptFeature == 4) ~ 1,
TRUE ~ 0)) %>%
st_as_sf(sf_column_name = "geometry")
LowRegret_SummaryAll <- lowRegret_ClimateSummary(df = LowRegretAll_sf, approach_column = "Feature_Solution") %>%
rbind(., lowRegret_ClimateSummary(df = LowRegretAll_sf, approach_column = "Percentile_Solution")) %>%
rbind(., lowRegret_ClimateSummary(df = LowRegretAll_sf, approach_column = "Penalty_Solution")) %>%
rbind(., lowRegret_ClimateSummary(df = LowRegretAll_sf, approach_column = "ImptFeature_Solution")) %>%
as_tibble() %>%
left_join(., LowRegret_SummaryAll, by = "approach")
ggComparison_Area_LowRegret <- plot_LowRegretStatistics(LowRegret_SummaryAll, col_name = "percent_area", y_axis = "% area")  + theme(axis.text = element_text(size = 25))
#' Create Low-Regret Areas across all Low-Regret Spatial Plans for the three approaches
LowRegret_sf <- LowRegretAll_sf %>%
dplyr::rename(solution_1 = SelectionAll) %>%
dplyr::mutate(solution_1 = as.logical(solution_1))
ggLowRegret_All <- fSpatPlan_PlotSolution(LowRegret_sf, PUs, land) + ggtitle("Low-Regret Areas", subtitle = "Across all approaches") + theme(axis.text = element_text(size = 25))
#' Check the summary
df <- cbind(LowRegret_sf, UniformCost)
summary_lr <- compute_summary(df, total_area, PU_size, run_name = "LowRegret_All", Cost = "cost")
print(summary_lr)
# Low-regret areas
ggsave(filename = "LowRegretArea_585.png",
plot = ggComparison_Area_LowRegret, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave(filename = "LowRegret_ImptFeature_585.png",
plot = gg_LowRegretImptFeature, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
# Saving feature representation
summary_directory <- "Output/summary/"
write.csv(feat_rep, paste0(summary_directory, "feature_representation.csv"))
# Saving summaries
write.csv(summary, paste0(summary_directory, "summary_statistics.csv"))
write.csv(LowRegret_SummaryAll, paste0(summary_directory, "LowRegret_summary_statistics.csv"))
summary
summary_lr
df <- read_csv("Output/summary/summary_statistics.csv")
