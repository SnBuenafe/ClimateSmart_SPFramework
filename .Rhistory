hist(calibration3$Scaling_400)
values <- c(75, 88, 99, 86, 77, 93, 91, 77, 93, 98, 99, 91)
quantile(values, 0.25)
quantile(values)
boxplot(values)
?boxplot
boxplot(values)
mean(88, 91)
88+91
(88+91)/2
source("HelperFunctions/SpatPlan_Extras.R") # Load the extras, including functions and libraries
source("HelperFunctions/SpatPlan_HelperFxns_WestPac.R") # Load helper functions written specifically for this spatial planning project
output_solutions <- "Output/solutions/"
output_summary <- "Output/summary/"
output_lowregret <- "Output/lowregret/"
# Load files
source("SpatPlan_Master_Preliminaries.R")
total_area = nrow(PUs) * PU_size
#### Comparing across approaches #####
# Load Low-regret areas
LRFeature <- readRDS("Output/lowregret/s3-EM-LowRegret-Feature-585.rds")
LRPercentile <- readRDS("Output/lowregret/s2-EM-LowRegret-Percentile-585.rds")
LRPenalty <- readRDS("Output/lowregret/s4-EM-LowRegret-Penalty-585.rds")
LRClimatePriorityArea <- readRDS("Output/lowregret/s5-EM-LowRegret-ClimatePriorityArea-585.rds")
# Load summaries
LRFeature_summary <- read_csv("Output/summary/MetricTheme_Feature_LowRegretSummary.csv") %>%
dplyr::select(-1)
LRPercentile_summary <- read_csv("Output/summary/MetricTheme_Percentile_LowRegretSummary.csv") %>%
dplyr::select(-1)
LRPenalty_summary <- read_csv("Output/summary/MetricTheme_Penalty_LowRegretSummary.csv") %>%
dplyr::select(-1)
LRClimatePriorityArea_summary <- read_csv("Output/summary/MetricTheme_ClimatePriorityArea_LowRegretSummary.csv") %>%
dplyr::select(-1)
#### Summaries ####
summary <- rbind(LRFeature_summary, LRPercentile_summary, LRPenalty_summary, LRClimatePriorityArea_summary)
# Check the Climate Metrics of the Low-Regret Areas
run_list <- c("LRFeature", "LRPercentile", "LRPenalty", "LRClimatePriorityArea")
climateLayer_list <- list(roc_tos_SSP585, roc_phos_SSP585, roc_o2os_SSP585, velocity_SSP585)
metric_list <- c("tos", "phos", "o2os", "velocity")
climate <- lowRegret_ClimateSummary(solution = solution_list,
run = run_list, metric = metric_list,
climate = climateLayer_list, scenario = "585",
approach = names)
# Kappa
solution_list <- list(LRFeature, LRPercentile, LRPenalty, LRClimatePriorityArea)
climate <- lowRegret_ClimateSummary(solution = solution_list,
run = run_list, metric = metric_list,
climate = climateLayer_list, scenario = "585",
approach = names)
names <- c("Feature", "Percentile", "Penalty", "ClimatePriorityArea")
climate <- lowRegret_ClimateSummary(solution = solution_list,
run = run_list, metric = metric_list,
climate = climateLayer_list, scenario = "585",
approach = names)
climate
write_csv(climate, paste0(output_summary, "ApproachTheme_Approaches_LowRegretClimateSummary.csv"))
# Get intersection of all low-regret areas
intersection <- intersect_lowregret(solution_list, run_list) %>%
dplyr::mutate(solution_1 = ifelse(selection == (length(run_list)*4), yes = 1, no = 0)) #*4 because 4 metrics TODO: Change it to 5 once including marine heatwaves
intersection
sum(solution_1)
sum(intersection$solution_1)
# Get summary
summary <- compute_summary(intersection, total_area, PU_size, run_name = "LR-Approaches", Cost = "cost")
climate <- list() # empty list
for (i in 1:length(metric_list)) {
climate[[i]] <- get_ClimateSummary(list(intersection), climateLayer_list[[i]], metric_list[i], col_scenario = "585", col_approach = "LR-Approaches", col_run = "LR-Approaches", climateLayer = "single")
}
climate <- plyr::join_all(climate, by=c("run", "scenario", "approach"), type='left')
climate
summary <- left_join(climate, summary, by = "run")
summary
write.csv(summary, paste0(output_summary, "ApproachTheme_Approaches_LowRegretSummary.csv")) # save
read_csv(paste0(output_summary, "ApproachTheme_Approaches_LowRegretClimateSummary.csv"))
s6 <- readRDS("Output/solutions/s6-EM-Feature-tos-585.rds")
s2 <- readRDS("Output/solutions/s2-EM-Percentile-tos-585.rds")
s10 <- readRDS("Output/solutions/s10-EM-Penalty-tos-585.rds")
s34 <- readRDS("Output/solutions/s34-EM-ClimatePriorityArea-tos-585.rds")
#### Climate-smart metrics of LR areas ####
# Climate Warming
# Kernel Density Plots
solution_list(s6, s2, s10, s34)
#### Climate-smart metrics of LR areas ####
# Climate Warming
# Kernel Density Plots
solution_list <- list(s6, s2, s10, s34)
list <- list() # empty list
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_tos_SSP585)
}
df <- do.call(rbind, list)
climate <- read_csv(paste0(output_summary, "Metric_Feature_Summary.csv"))
output_summary
climate <- read_csv("Output/summary/Metric_Feature_Summary.csv")
climate <- read_csv(paste0(output_summary, "Output/summary/MetricTheme_Feature_Summary.csv"))
climate <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv"))
climate <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::select(-1)
climate
?grepl
climate <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::select(dplyr::filter(grepl("tos", run)))
lclimate
climate
climate <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::select(dplyr::filter(run = grepl("tos", run)))
climate <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(run = grepl("tos", run))
climate <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("tos", run))
climate
climate <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming)
climate
climate <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming, run)
climate
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming, run)
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming, run)
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming, run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming, run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming, run)
?bind_rows
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
climate
ggRidge <- ggplot(data = df, aes(x = transformed, y = approach, group = approach, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3) +
scale_fill_viridis_c(name = expression('Δ'^"o"*'C yr'^"-1"*''), option = "C") +
geom_vline(xintercept = climate$mean_climate_warming,
linetype = "dashed", color = "tan1", size = 0.5) +
theme_classic()
ggRidge
df
df <- do.call(rbind, list)
df
#### Climate-smart metrics of LR areas ####
# Climate Warming
# Kernel Density Plots
solution_list <- list(s6, s2, s10, s34)
list <- list() # empty list
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_tos_SSP585)
}
roc_tos_SSP585
s6
s34
clear
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_tos_SSP585)
}
solution <- solution_list[[1]]
metric_df = roc_tos_SSP585
metric_df <- metric %>%
as_tibble()
metric <- metric %>%
as_tibble()
metric <- roc_tos_SSP585
metric_df <- metric %>%
as_tibble()
df <- solution %>%
as_tibble() %>%
left_join(., metric_df, by = "geometry")
df
df <- solution %>%
as_tibble() %>%
left_join(., metric_df, by = "geometry") %>%
dplyr::filter(solution_1 == 1) %>%
dplyr::select(transformed)
unique(colnames(df))
unique(colnames(df)) %>% print(n = Inf)
unique(colnames(df)) %>% as_tibble() %>%  print(n = Inf)
metric_df <- metric %>%
as_tibble()
df <- solution %>%
as_tibble() %>%
left_join(., metric_df) %>%
dplyr::filter(solution_1 == 1) %>%
dplyr::select(transformed) %>%
dplyr::rename(!!sym(name) := transformed) %>%
pivot_longer(!!sym(name), names_to = group, values_to = "transformed")
# Make Kernel for Climate Data
make_kernel <- function(solution, name, group, metric = NA) {
if(is.na(metric)) {
df <- solution %>%
as_tibble() %>%
dplyr::filter(solution_1 == 1) %>%
dplyr::select(transformed) %>%
dplyr::rename(!!sym(name) := transformed) %>%
pivot_longer(!!sym(name), names_to = group, values_to = "transformed")
} else {
metric_df <- metric %>%
as_tibble()
df <- solution %>%
as_tibble() %>%
left_join(., metric_df) %>%
dplyr::filter(solution_1 == 1) %>%
dplyr::select(transformed) %>%
dplyr::rename(!!sym(name) := transformed) %>%
pivot_longer(!!sym(name), names_to = group, values_to = "transformed")
}
return(df)
}
#### Climate-smart metrics of LR areas ####
# Climate Warming
# Kernel Density Plots
solution_list <- list(s6, s2, s10, s34)
list <- list() # empty list
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_tos_SSP585)
}
df <- do.call(rbind, list)
df
ggRidge <- ggplot(data = df, aes(x = transformed, y = approach, group = approach, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3) +
scale_fill_viridis_c(name = expression('Δ'^"o"*'C yr'^"-1"*''), option = "C") +
geom_vline(xintercept = climate$mean_climate_warming,
linetype = "dashed", color = "tan1", size = 0.5) +
theme_classic()
ggRidge
ggRidge
ggsave(filename = "ClimateWarmingDist-ApproachTheme-tos.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Ocean Acidification
# Kernel Density Plots
list <- list() # empty list
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_phos_SSP585)
}
df <- do.call(rbind, list)
df
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
feature
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
climate
ggRidge <- ggplot(data = df, aes(x = transformed, y = approach, group = approach, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5) +
scale_fill_viridis_c(name = expression('Δ pH yr'^"-1"*''), option = "A") +
geom_vline(xintercept = climate$mean_ocean_acidification,
linetype = "dashed", color = "tan1", size = 0.5) +
theme_classic()
ggRidge
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
climate
df
ggRidge <- ggplot(data = df, aes(x = transformed, y = approach, group = approach, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5) +
scale_fill_viridis_c(name = expression('Δ pH yr'^"-1"*''), option = "A") +
geom_vline(xintercept = climate$mean_ocean_acidification,
linetype = "dashed", color = "tan1", size = 0.5) +
theme_classic()
ggRidge
climate
df
climate
roc_phos_SSP585
# Ocean Acidification
# Kernel Density Plots
list <- list() # empty list
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_phos_SSP585)
}
list
roc
roc_phos_SSP585
# Make Kernel for Climate Data
make_kernel <- function(solution, name, group, metric = NA) {
if(is.na(metric)) {
df <- solution %>%
as_tibble() %>%
dplyr::filter(solution_1 == 1) %>%
dplyr::select(transformed) %>%
dplyr::rename(!!sym(name) := transformed) %>%
pivot_longer(!!sym(name), names_to = group, values_to = "transformed")
} else {
metric_df <- metric %>%
as_tibble()
df <- solution %>%
as_tibble() %>%
left_join(., metric_df) %>%
dplyr::filter(solution_1 == 1) %>%
dplyr::select(transformed) %>%
dplyr::rename(!!sym(name) := transformed) %>%
pivot_longer(!!sym(name), names_to = group, values_to = "transformed")
}
return(df)
}
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_phos_SSP585)
}
rm(metric)
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_phos_SSP585)
}
df <- do.call(rbind, list)
df
View(df)
s7 <- readRDS("Output/solutions/s7-EM-Feature-phos-585.rds")
s3 <- readRDS("Output/solutions/s3-EM-Percentile-phos-585.rds")
s11 <- readRDS("Output/solutions/s11-EM-Penalty-phos-585.rds")
s35 <- readRDS("Output/solutions/s35-EM-ClimatePriorityArea-phos-585.rds")
# Ocean Acidification
# Kernel Density Plots
solution_list <- list(s7, s3, s11, s35)
list <- list() # empty list
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_phos_SSP585)
}
df <- do.call(rbind, list)
df
ggRidge <- ggplot(data = df, aes(x = transformed, y = approach, group = approach, fill = stat(x))) +
geom_density_ridges_gradient(scale = 1.5) +
scale_fill_viridis_c(name = expression('Δ pH yr'^"-1"*''), option = "A") +
geom_vline(xintercept = climate$mean_ocean_acidification,
linetype = "dashed", color = "tan1", size = 0.5) +
theme_classic()
ggRidge
ggsave(filename = "OceanAcidificationDist-ApproachTheme-phos.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
s8 <- readRDS("Output/solutions/s8-EM_Feature-o2os-585.rds")
s4 <- readRDS("Output/solutions/s4-EM-Percentile-o2os-585.rds")
s12 <- readRDS("Output/solutions/s12-EM-Penalty-o2os-585.rds")
s36 <- readRDS("Output/solutions/s36-EM-ClimatePriorityArea-o2os-585.rds")
# Rate of Declining Oxygen Concentration
# Kernel Density Plots
solution_list <- list(s8, s4, s12, s36)
list <- list() # empty list
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_o2os_SSP585)
}
df <- do.call(rbind, list)
df
s8
s8
s36
s12
s4 <- st_join(s4, roc_o2os_SSP585)
s4
s4
s4 <- readRDS("Output/solutions/s4-EM-Percentile-o2os-585.rds")
s4
s8 <- readRDS("Output/solutions/s8-EM-Feature-o2os-585.rds")
s8
# Rate of Declining Oxygen Concentration
# Kernel Density Plots
solution_list <- list(s8, s4, s12, s36)
list <- list() # empty list
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_o2os_SSP585)
}
df <- do.call(rbind, list)
df
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("o2os", run)) %>% dplyr::select(mean_oxygen_decline, run)
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("o2os", run)) %>% dplyr::select(mean_oxygen_decline, run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl("o2os", run)) %>% dplyr::select(mean_oxygen_decline, run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl("o2os", run)) %>% dplyr::select(mean_oxygen_decline, run)
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
climate
ggRidge <- ggplot(data = df, aes(x = transformed, y = approach, group = approach, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3) +
scale_fill_viridis_c(name = expression('Δ mol m'^"-3"*' yr'^"-1"*''), option = "D") +
geom_vline(xintercept = climate$mean_oxygen_decline,
linetype = "dashed", color = "black", size = 0.5) +
theme_classic()
ggRidge
ggsave(filename = "OxygenDeclineDist-ApproachTheme-o2os.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
s9 <- readRDS("Output/solutions/s9-EM-Feature-velocity-585.rds")
s5 <- readRDS("Output/solutions/s5-EM-Percentile-velocity-585.rds")
s13 <- readRDS("Output/solutions/s13-EM-Penalty-velocity-585.rds")
s37 <- readRDS("Output/solutions/s37-EM-ClimatePriorityArea-velocity-585.rds")
s5
# Climate velocity
# Kernel Density Plots
solution_list <- list(s9, s5, s13, s37)
list <- list() # empty list
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = velocity_SSP585)
}
df <- do.call(rbind, list)
df
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("velocity", run)) %>% dplyr::select(median_velocity, run)
feature
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("velocity", run)) %>% dplyr::select(median_velocity, run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl("velocity", run)) %>% dplyr::select(median_velocity, run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl("velocity", run)) %>% dplyr::select(median_velocity, run)
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
ggRidge <- ggplot(data = df, aes(x = transformed, y = approach, group = approach, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3) +
scale_fill_distiller(name = expression('km yr'^"-1"*''), palette = "RdYlBu") +
geom_vline(xintercept = climate$median_velocity,
linetype = "dashed", color = "khaki3", size = 0.5) +
theme_classic()
ggRidge
ggsave(filename = "ClimateVelocityDist-ApproachTheme-velocity.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Ocean Acidification
# Kernel Density Plots
solution_list <- list(s7, s3, s11, s35)
list <- list() # empty list
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name, metric = roc_phos_SSP585)
}
df <- do.call(rbind, list)
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
climate
ggRidge <- ggplot(data = df, aes(x = transformed, y = approach, group = approach, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3) +
scale_fill_viridis_c(name = expression('Δ pH yr'^"-1"*''), option = "A") +
geom_vline(xintercept = climate$mean_ocean_acidification,
linetype = "dashed", color = "tan1", size = 0.5) +
theme_classic()
ggRidge
ggsave(filename = "OceanAcidificationDist-ApproachTheme-phos.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming, run)
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming, run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming, run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl("tos", run)) %>% dplyr::select(mean_climate_warming, run)
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
climate
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl("phos", run)) %>% dplyr::select(mean_ocean_acidification, run)
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
climate
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("o2os", run)) %>% dplyr::select(mean_oxygen_decline, run)
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("o2os", run)) %>% dplyr::select(mean_oxygen_decline, run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl("o2os", run)) %>% dplyr::select(mean_oxygen_decline, run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl("o2os", run)) %>% dplyr::select(mean_oxygen_decline, run)
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
climate
climate$mean_oxygen_decline
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl("velocity", run)) %>% dplyr::select(median_velocity, run)
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl("velocity", run)) %>% dplyr::select(median_velocity, run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl("velocity", run)) %>% dplyr::select(median_velocity, run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl("velocity", run)) %>% dplyr::select(median_velocity, run)
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
climate
s6_LRplot <- readRDS("Output/lowregret/s6-EM-LowRegret-tos-585.rds")
s7_LRplot <- readRDS("Output/lowregret/s7-EM-LowRegret-phos-585.rds")
s8_LRplot <- readRDS("Output/lowregret/s8-EM-LowRegret-o2os-585.rds")
s9_LRplot <- readRDS("Output/lowregret/s9-EM-LowRegret-velocity-585.rds")
# Get intersection of all low-regret areas
solution_list <- list(s6_LRplot, s7_LRplot, s8_LRplot, s9_LRplot)
intersection <- intersect_lowregret(solution_list, run_list) %>%
dplyr::mutate(solution_1 = ifelse(selection == (length(run_list)*4), yes = 1, no = 0)) #*4 because 4 metrics TODO: Change it to 5 once including marine heatwaves
intersection
sum(intersection$solution_1 == 1)
library(vegan)
?adonis2
data(dune)
data(dune.env)
dune.env
adonis2(dune ~ Management*A1, data = dune.env)
dune
# restore session
session::restore.session("data/final/results.rda")
install.packages("session")
# restore session
session::restore.session("data/final/results.rda")
# restore session
session::restore.session(session_path("10"))
# set seed for reproducibility
set.seed(500)
# parse parameter settings
pars <- commandArgs(TRUE)
if (length(pars) > 0) {
cat(pars)
if (grepl("MODE", pars))
MODE <- strsplit(grep("MODE", pars, value = TRUE),
"=", fixed = TRUE)[[1]][[2]]
}
# load packages
library(magrittr)
library(sf)
library(dplyr)
# load parameters
general_parameters <- RcppTOML::parseTOML("code/parameters/general.toml")
general_parameters <- general_parameters[[MODE]]
install.packages("RcppTOML")
# load parameters
general_parameters <- RcppTOML::parseTOML("code/parameters/general.toml")
