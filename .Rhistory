#### Saving solutions ####
# Saving solutions
output_solutions <- "Output/solutions/"
# Saving feature representation
summary_directory <- "Output/summary/"
write.csv(feat_rep, paste0(summary_directory, "feature_representation.csv"))
# Saving summaries
write.csv(summary, paste0(summary_directory, "summary_statistics.csv"))
#' ### Low-regret Areas
#' To create low-regret climate-smart design, we should only select areas that have been selected for all climate-smart designs utilizing different climate scenarios
# Select solutions for all climate-smart designs
solution_list <- list(s2, s38, s39)
col_names <- c("penalty_tos_126", "penalty_tos_245", "penalty_tos_585")
LowRegret_ClimateScenario <- create_LowRegretSf(solution_list, col_names, PUs)
(gg_LowRegretClimateScenario <- plot_lowregret(LowRegret_ClimateScenario, land) + theme(axis.text = element_text(size = 25)))
gg_LowRegretClimateScenario
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_Penalty, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "all")
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_ClimateScenario, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "all")
print(LowRegret_SummaryClimateScenario)
# Create low regret areas for specific approach
create_LowRegretSf <- function(solution_list, col_names, PUs) {
df <- list() # empty list
for (i in 1:length(col_names)) {
df[[i]] <- solution_list[[i]] %>% dplyr::select(solution_1) %>%
rename(!!sym(col_names[i]) := solution_1) %>%
as_tibble()
}
tmp <- df[[1]]
for (i in 2:length(col_names)) {
tmp <- tmp %>%
left_join(df[[i]], .)
}
tmp %<>% dplyr::select(-geometry) %>%
mutate(selection = rowSums(., na.rm = TRUE)) %>%
dplyr::mutate(cellID = row_number())
PUs_temp <- PUs %>%
dplyr::mutate(cellID = row_number())
# Create the low-regret sf object
low_regret <- full_join(tmp, PUs_temp, by = "cellID") %>%
st_as_sf(sf_column_name = "geometry") %>%
left_join(., UniformCost %>% as_tibble(), by = "geometry") %>%
st_as_sf(sf_column_name = "geometry") %>%
dplyr::mutate(solution_1 = ifelse(selection == 3, 1, 0))
return(low_regret)
}
LowRegret_ClimateScenario <- create_LowRegretSf(solution_list, col_names, PUs)
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_ClimateScenario, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "all")
print(LowRegret_SummaryClimateScenario)
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv")
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1)
LowRegretSummary
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1) %>%
add_row(., LowRegret_SummaryClimateScenario)
LowRegret_SummaryClimateScenario
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1) %>%
rbind(., LowRegret_SummaryClimateScenario)
add_row(LowRegretSummary, LowRegret_SummaryClimateScenario)
LowRegretSummary
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_ClimateScenario, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "126245585")
print(LowRegret_SummaryClimateScenario)
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1) %>%
add_row(., LowRegret_SummaryClimateScenario)
LowRegretSummary
View(LowRegretSummary)
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1)
LowRegretSummary
df <- LowRegretSummary %>%
add_row(., LowRegret_SummaryClimateScenario)
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_ClimateScenario, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = "126")
print(LowRegret_SummaryClimateScenario)
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1)
df <- LowRegretSummary %>%
add_row(., LowRegret_SummaryClimateScenario)
#' Check low-regret summary
LowRegret_SummaryClimateScenario <- compute_summary(LowRegret_ClimateScenario, total_area, PU_size, "low_regret", Cost = "cost") %>%
mutate(approach = "percentile", scenario = 126245585)
print(LowRegret_SummaryClimateScenario)
LowRegretSummary <- read_csv("Output/summary/LowRegret_summary_statistics.csv") %>%
dplyr::select(-X1)
df <- LowRegretSummary %>%
add_row(., LowRegret_SummaryClimateScenario)
df
LowRegretSummary %<>%
add_row(., LowRegret_SummaryClimateScenario)
LowRegretSummary
write.csv(LowRegret_SummaryAll, paste0(summary_directory, "LowRegret_summary_statistics.csv"))
write.csv(LowRegret_Summary, paste0(summary_directory, "LowRegret_summary_statistics.csv"))
write.csv(LowRegretSummary, paste0(summary_directory, "LowRegret_summary_statistics.csv"))
LowRegretSummary
View(LowRegretSummary)
gg_LowRegretClimateScenario
# Save Low-regret areas and summaries for multiple cliamte scenarios
ggsave(filename = "LowRegret_ClimateScenario.png",
plot = gg_LowRegretClimateScenario, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggSummary_Area <- plot_statistics(summary %>% filter(run == "percentile"), col_name = "percent_area", y_axis = "% area", color = 1) + theme(axis.text = element_text(size = 25))
ggSummary_Area
summary %>% filter(run == "percentile")
summary
ggSummary_Area <- plot_statistics(summary %>% filter(approach == "percentile"), col_name = "percent_area", y_axis = "% area", color = 1) + theme(axis.text = element_text(size = 25))
ggSummary_Area
View(summary)
ggSummary_Area <- plot_statistics(summary %>% filter(run %in% c("percentile_tos_126", "percentile_tos_245", "percentile_tos_585") ), col_name = "percent_area", y_axis = "% area", color = 1) + theme(axis.text = element_text(size = 25))
ggSummary_Area
summary %>% filter(run %in% c("percentile_tos_126", "percentile_tos_245", "percentile_tos_585")
)
# Plot statistics
plot_statistics <- function(summary, col_name, y_axis, color) {
if (color == 1) { # For plotting related to RQ2
color_legend <- c("tos" = "#289E3D", "phos" = "#E6C173", "o2os" = "#81B0CC", "velocity" = "#855600")
summary %<>% dplyr::mutate(approach = case_when(str_detect(run, pattern = "tos") ~ "tos",
str_detect(run, pattern = "phos") ~ "phos",
str_detect(run, pattern = "o2os") ~ "o2os",
str_detect(run, pattern = "velocity") ~ "velocity"))
} else if (color == 2) { # For plotting related to RQ1
color_legend <- c("uninformed" = "#a6611a", "tos" = "#dfc27d")
summary %<>% dplyr::mutate(approach = case_when(str_detect(run, pattern = "uninformed") ~ "uninformed",
str_detect(run, pattern = "tos") ~ "tos"))
} else if (color == 3) { # For plotting vs scenarios
summary %<>% dplyr::mutate(approach = case_when(run == "percentile_tos_585" ~ "SSP 5-8.5",
run == "percentile_tos_126" ~ "SSP 1-2.6",
run == "percentile_tos_245" ~ "SSP 2-4.5"))
color_legend <- c("SSP 1-2.6" = "#289E3D", "SSP 2-4.5" = "#E6C173", "SSP 5-8.5" = "#855600")
}
plot <- ggplot(data = summary, aes(x = as.factor(approach))) + # TODO: add in aes (later on) group = scenario
geom_bar(aes_string(y = col_name, fill = "as.factor(approach)"), stat = 'identity', position = position_dodge()) +
scale_fill_manual(name = 'Run',
values = color_legend) +
xlab("Run") +
ylab(y_axis) +
theme(legend.position = "bottom") +
theme_classic()
return(plot)
}
ggSummary_Area <- plot_statistics(summary %>% filter(run %in% c("percentile_tos_126", "percentile_tos_245", "percentile_tos_585") ), col_name = "percent_area", y_axis = "% area", color = 3) + theme(axis.text = element_text(size = 25))
ggSummary_Area
ggSol38 + ggSol39
ggsave(filename = "LowRegret_ClimateScenario_Area.png",
plot = ggSummary_Area, width = 7, height = 5, dpi = 300,
path = "Figures/")
source("HelperFunctions/SpatPlan_Extras.R") # Load the extras, including functions and libraries
#' If already done the saving above, just call the files
o2os_CanESM5 <- readRDS("Output/WestPacific_PU_669.9km2_roc_o2os_SSP 5-8.5_CanESM5_ensemble.rds")
`o2os_CMCC-ESM2`<- readRDS("Output/WestPacific_PU_669.9km2_roc_o2os_SSP 5-8.5_CMCC-ESM2_ensemble.rds")
`o2os_GFDL-ESM4` <- readRDS("Output/WestPacific_PU_669.9km2_roc_o2os_SSP 5-8.5_GFDL-ESM4_ensemble.rds")
`o2os_IPSL-CM6A-LR` <- readRDS("Output/WestPacific_PU_669.9km2_roc_o2os_SSP 5-8.5_IPSL-CM6A-LR_ensemble.rds")
`o2os_NorESM2-MM` <- readRDS("Output/WestPacific_PU_669.9km2_roc_o2os_SSP 5-8.5_NorESM2-MM_ensemble.rds")
source("HelperFunctions/SpatPlan_Extras.R") # Load the extras, including functions and libraries
source("HelperFunctions/SpatPlan_HelperFxns_WestPac.R") # Load helper functions written specifically for this spatial planning project
output_solutions <- "Output/solutions/"
output_summary <- "Output/summary/"
output_lowregret <- "Output/lowregret/"
# Load files
source("SpatPlan_Master_Preliminaries.R")
total_area = nrow(PUs) * PU_size
# A. CanESM5
# 1. Prepare climate layer
# Intersect this with climate layer, select only those >= 65th percentile).
ensemble <- list(`o2os_CanESM5`, `o2os_CMCC-ESM2`, `o2os_GFDL-ESM4`, `o2os_IPSL-CM6A-LR`, `o2os_NorESM2-MM`)
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "o2os", colname = "slpTrends", metric_df = ensemble[[1]], PUs = PUs)
# Load files
source("SpatPlan_Master_Preliminaries.R")
# Load files
source("SpatPlan_Master_Preliminaries.R")
# A. CanESM5
# 1. Prepare climate layer
# Intersect this with climate layer, select only those >= 65th percentile).
ensemble <- list(`o2os_CanESM5`, `o2os_CMCC-ESM2`, `o2os_GFDL-ESM4`, `o2os_IPSL-CM6A-LR`, `o2os_NorESM2-MM`)
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "o2os", colname = "slpTrends", metric_df = ensemble[[1]], PUs = PUs)
# 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
# 3. Set up the spatial planning problem
out_sf <- cbind(aqua_percentile, o2os_CanESM5, UniformCost)
p24 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
s24 <- readRDS("Output/solutions/s24-MM-CanESM5-Percentile-o2os-585.rds")
# 5. Plot the spatial design
s24_plot <- s24 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol24 <- fSpatPlan_PlotSolution(s24_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Declining Oxygen Concentration", subtitle = "Percentile, SSP 5-8.5 (GCM: CanESM5)") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-CanESM5-Percentile-o2os-585.png",
plot = ggSol24, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# B. CMCC-ESM2
# 1. Prepare climate layer
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "o2os", colname = "slpTrends", metric_df = ensemble[[2]], PUs = PUs)
# 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
# 3. Set up the spatial planning problem
out_sf <- cbind(aqua_percentile, `o2os_CMCC-ESM2`, UniformCost)
p25 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
s25 <- readRSD("Output/solutions/s25-percentile-o2os-585-CMCC-ESM2-ensemble.rds")
s25 <- readRDS("Output/solutions/s25-percentile-o2os-585-CMCC-ESM2-ensemble.rds")
# 5. Plot the spatial design
s25_plot <- s25 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol25 <- fSpatPlan_PlotSolution(s25_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Declining Oxygen Concentration", subtitle = "Percentile, SSP 5-8.5 (GCM: CMCC-ESM2)") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-CMCC_ESM2-Percentile-o2os-585.png",
plot = ggSol25, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# C. GFDL-ESM4
# 1. Prepare climate layer
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "o2os", colname = "slpTrends", metric_df = ensemble[[3]], PUs = PUs)
# 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
# 3. Set up the spatial planning problem
out_sf <- cbind(aqua_percentile, `o2os_GFDL-ESM4`, UniformCost)
p26 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
s26 <- readRDS("Output/solutions/s26-MM-GFDL_ESM4-Percentile-o2os-585.rds")
#' 5. Plot the spatial design
s26_plot <- s26 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol26 <- fSpatPlan_PlotSolution(s26_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Declining Oxygen Concentration", subtitle = "Percentile, SSP 5-8.5 (GCM: GFDL-ESM4)") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-GFDL_ESM4-Percentile-o2os-585.png",
plot = ggSol26, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# D. IPSL-CM6A-LR
# 1. Prepare climate layer
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "o2os", colname = "slpTrends", metric_df = ensemble[[4]], PUs = PUs)
# 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
# 3. Set up the spatial planning problem
out_sf <- cbind(aqua_percentile, `o2os_IPSL-CM6A-LR`, UniformCost)
p27 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
s27 <- readRDS("Output/solutions/s27-percentile-o2os-585-IPSL-CM6A-LR-ensemble.rds")
saveRDS(s27, paste0(output_solutions, "s27-MM-IPSL_CM6A_LR-Percentile-o2os-585.rds")) # save solution
# 5. Plot the spatial design
s27_plot <- s27 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol27 <- fSpatPlan_PlotSolution(s27_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Declining Oxygen Concentration", subtitle = "Percentile, SSP 5-8.5 (GCM: IPSL-CM6A-LR)") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-IPSL_CM6A_LR-Percentile-o2os-585.png",
plot = ggSol27, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# E. NorESM2-MM
# 1. Prepare climate layer
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "o2os", colname = "slpTrends", metric_df = ensemble[[5]], PUs = PUs)
# 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
# 3. Set up the spatial planning problem
out_sf <- cbind(aqua_percentile, `o2os_NorESM2-MM`, UniformCost)
p28 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
s28 <- readRDS("Output/solutions/s28-percentile-o2os-585-NorESM2-MM-ensemble.rds")
saveRDS(s28, paste0(output_solutions, "s28-MM-NorESM2_MM-Percentile-o2os-585.rds")) # save solution
# 5. Plot the spatial design
s28_plot <- s28 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol28 <- fSpatPlan_PlotSolution(s28_plot, PUs, land) + ggtitle("Climate-smart design: Rate of Declining Oxygen Concentration", subtitle = "Percentile, SSP 5-8.5 (GCM: NorESM2-MM)") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-NorESM2_MM-Percentile-o2os-585.png",
plot = ggSol28, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# Get summaries of all solutions
# Feature representation
problem_list <- list(p24, p25, p26, p27, p28)
solution_list <- list(s24, s25, s26, s27, s28)
names <- c("MM-CanESM5_Percentile_o2os_585", "MM-CMCC-ESM2_Percentile_o2os_585", "MM-GFDL-ESM4_Percentile_o2os_585", "MM-IPSL-CM6A-LR_Percentile_o2os_585", "MM-NorESM2-MM_Percentile_o2os_585")
feat_rep <- tibble(feature = character()) # empty tibble
for(i in 1:length(names)) {
df <- represent_feature(problem_list[[i]], solution_list[[i]], names[i])
feat_rep <- left_join(df, feat_rep, by = "feature")
}
feat_rep
write.csv(feat_rep, paste0(output_summary, "EnsembleTheme_o2os_FeatureRepresentation.csv")) # save
# Summary
climateLayer_list <- list(`o2os_CanESM5`, `o2os_CMCC-ESM2`, `o2os_GFDL-ESM4`, `o2os_IPSL-CM6A-LR`, `o2os_NorESM2-MM`)
df <- tibble(run = character()) # empty tibble
for(i in 1:length(names)) {
statistics <- compute_summary(solution_list[[i]], total_area, PU_size, names[i], Cost = "cost")
df <- rbind(statistics, df)
}
climate <- get_ClimateSummary(solution_list, climateLayer_list[[i]], "o2os", col_scenario = "585", col_approach = "percentile", col_run = names)
summary <- left_join(climate, df, by = "run")
write.csv(summary, paste0(output_summary, "EnsembleTheme_o2os_Summary.csv")) # save
# Create selection frequency plot
solution_list <- list(s24, s25, s26, s27, s28)
col_names <- c("o2os_CanESM5", "o2os_CMCC-ESM2", "o2os_GFDL-ESM4", "o2os_IPSL-CM6A-LR", "o2os_NorESM2-MM")
s3_MMplot <- create_LowRegretSf(solution_list, col_names, PUs)
saveRDS(s3_MMplot, paste0(output_lowregret, "s3-MM-SelectionFrequency-Percentile-o2os-585.rds")) # save solution
ggSelFreq3 <- plot_SelectionFrequency(s3_MMplot, land) + ggtitle("Selection Frequency: Rate of Declining Oxygen Concentration", subtitle = "Percentile, SSP 5-8.5") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-SelectionFrequency-o2os-585.png",
plot = ggSelFreq3, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# A. CanESM5
# 1. Prepare climate layer
ensemble <- list(`velocity_CanESM5`, `velocity_CMCC-ESM2`, `velocity_GFDL-ESM4`, `velocity_IPSL-CM6A-LR`, `velocity_NorESM2-MM`)
#' If already done the saving above, just call the files
velocity_CanESM5 <- readRDS("Output/WestPacific_PU_669.9km2_velocity_SSP 5-8.5_CanESM5_ensemble.rds")
`velocity_CMCC-ESM2`<- readRDS("Output/WestPacific_PU_669.9km2_velocity_SSP 5-8.5_CMCC-ESM2_ensemble.rds")
`velocity_GFDL-ESM4` <- readRDS("Output/WestPacific_PU_669.9km2_velocity_SSP 5-8.5_GFDL-ESM4_ensemble.rds")
`velocity_IPSL-CM6A-LR` <- readRDS("Output/WestPacific_PU_669.9km2_velocity_SSP 5-8.5_IPSL-CM6A-LR_ensemble.rds")
`velocity_NorESM2-MM` <- readRDS("Output/WestPacific_PU_669.9km2_velocity_SSP 5-8.5_NorESM2-MM_ensemble.rds")
# A. CanESM5
# 1. Prepare climate layer
ensemble <- list(`velocity_CanESM5`, `velocity_CMCC-ESM2`, `velocity_GFDL-ESM4`, `velocity_IPSL-CM6A-LR`, `velocity_NorESM2-MM`)
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "velocity", colname = "voccMag", metric_df = ensemble[[1]], PUs = PUs)
# 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
# 3. Set up the spatial planning problem
out_sf <- cbind(aqua_percentile, velocity_CanESM5, UniformCost)
p29 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
s29 <- readRDS("Output/solutions/s29-percentile-velocity-585-CanESM5-ensemble.rds")
saveRDS(s29, paste0(output_solutions, "s29-MM-CanESM5-Percentile-velocity-585.rds")) # save solution
# 5. Plot the spatial design
s29_plot <- s29 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol29 <- fSpatPlan_PlotSolution(s29_plot, PUs, land) + ggtitle("Climate-smart design: Climate Velocity", subtitle = "Percentile, SSP 5-8.5 (GCM: CanESM5)") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-CanESM5-Percentile-velocity-585.png",
plot = ggSol29, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# B. CMCC-ESM2
# 1. Prepare climate layer
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "velocity", colname = "voccMag", metric_df = ensemble[[2]], PUs = PUs)
# 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
# 3. Set up the spatial planning problem
out_sf <- cbind(aqua_percentile, `velocity_CMCC-ESM2`, UniformCost)
p30 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
s3o <- readRDS("Output/solutions/s30-percentile-velocity-585-CMCC-ESM2-ensemble.rds")
saveRDS(s30, paste0(output_solutions, "s30-MM-CMCC_ESM2-Percentile-velocity-585.rds")) # save solution
s30 <- readRDS("Output/solutions/s30-percentile-velocity-585-CMCC-ESM2-ensemble.rds")
saveRDS(s30, paste0(output_solutions, "s30-MM-CMCC_ESM2-Percentile-velocity-585.rds")) # save solution
# 5. Plot the spatial design
s30_plot <- s30 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol30 <- fSpatPlan_PlotSolution(s30_plot, PUs, land) + ggtitle("Climate-smart design: Climate Velocity", subtitle = "Percentile, SSP 5-8.5 (GCM: CMCC-ESM2)") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-CMCC_ESM2-Percentile-velocity-585.png",
plot = ggSol30, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# C. GFDL-ESM4
# 1. Prepare climate layer
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "velocity", colname = "voccMag", metric_df = ensemble[[3]], PUs = PUs)
# 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
# 3. Set up the spatial planning problem
out_sf <- cbind(aqua_percentile, `velocity_GFDL-ESM4`, UniformCost)
p31 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
s31 <- readRDS("Output/solutions/s31-percentile-velocity-585-GFDL-ESM4-ensemble.rds")
saveRDS(s31, paste0(output_solutions, "s31-MM-GFDL_ESM4-Percentile-velocity-585.rds")) # save solution
# 5. Plot the spatial design
s31_plot <- s31 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol31 <- fSpatPlan_PlotSolution(s31_plot, PUs, land) + ggtitle("Climate-smart design: Climate Velocity", subtitle = "Percentile, SSP 5-8.5 (GCM: GFDL-ESM4)") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-GFDL_ESM4-Percentile-velocity-585.png",
plot = ggSol31, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# D. IPSL-CM6A-LR
# 1. Prepare climate layer
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "velocity", colname = "voccMag", metric_df = ensemble[[4]], PUs = PUs)
# 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
# 3. Set up the spatial planning problem
out_sf <- cbind(aqua_percentile, `velocity_IPSL-CM6A-LR`, UniformCost)
p32 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
s32 <- readRDS("Output/solutions/s32-percentile-velocity-585-IPSL-CM6A-LR-ensemble.rds")
saveRDS(s32, paste0(output_solutions, "s32-MM-IPSL_CM6A_LR-Percentile-velocity-585.rds")) # save solutions
#' 5. Plot the spatial design
s32_plot <- s32 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol32 <- fSpatPlan_PlotSolution(s32_plot, PUs, land) + ggtitle("Climate-smart design: Climate Velocity", subtitle = "Percentile, SSP 5-8.5 (GCM: IPSL-CM6A-LR)") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-IPSL_CM6A_LR-Percentile-velocity-585.png",
plot = ggSol32, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# E. NorESM2-MM
# 1. Prepare climate layer
aqua_percentile <- create_PercentileLayer(aqua_sf = aqua_sf, metric_name = "velocity", colname = "voccMag", metric_df = ensemble[[5]], PUs = PUs)
# 2. Get list of features
features <- aqua_percentile %>%
as_tibble() %>%
dplyr::select(-geometry) %>%
names()
# 3. Set up the spatial planning problem
out_sf <- cbind(aqua_percentile, `velocity_NorESM2-MM`, UniformCost)
p33 <- prioritizr::problem(out_sf, features, "cost") %>%
add_min_set_objective() %>%
add_relative_targets(30/35) %>%
add_binary_decisions() %>%
add_gurobi_solver(gap = 0, verbose = FALSE)
s33 <- readRDS("Output/solutions/s33-percentile-velocity-585-NorESM2-MM-ensemble.rds")
saveRDS(s33, paste0(output_solutions, "s33-MM-NorESM2_MM-Percentile-velocity-585.rds")) # save solutions
# 5. Plot the spatial design
s33_plot <- s33 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol33 <- fSpatPlan_PlotSolution(s33_plot, PUs, land) + ggtitle("Climate-smart design: Climate Velocity", subtitle = "Percentile, SSP 5-8.5 (GCM: NorESM2-MM)") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-NorESM2_MM-Percentile-velocity-585.png",
plot = ggSol33, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# Get summaries of all solutions
# Feature representation
problem_list <- list(p29, p30, p31, p32, p33)
solution_list <- list(s29, s30, s31, s32, s33)
names <- c("MM-CanESM5_Percentile_velocity_585", "MM-CMCC-ESM2_Percentile_velocity_585", "MM-GFDL-ESM4_Percentile_velocity_585", "MM-IPSL-CM6A-LR_Percentile_velocity_585", "MM-NorESM2-MM_Percentile_velocity_585")
feat_rep <- tibble(feature = character()) # empty tibble
for(i in 1:length(names)) {
df <- represent_feature(problem_list[[i]], solution_list[[i]], names[i])
feat_rep <- left_join(df, feat_rep, by = "feature")
}
feat_rep
write.csv(feat_rep, paste0(output_summary, "EnsembleTheme_velocity_FeatureRepresentation.csv")) # save
# Summary
climateLayer_list <- list(`velocity_CanESM5`, `velocity_CMCC-ESM2`, `velocity_GFDL-ESM4`, `velocity_IPSL-CM6A-LR`, `velocity_NorESM2-MM`)
df <- tibble(run = character()) # empty tibble
for(i in 1:length(names)) {
statistics <- compute_summary(solution_list[[i]], total_area, PU_size, names[i], Cost = "cost")
df <- rbind(statistics, df)
}
climate <- get_ClimateSummary(solution_list, climateLayer_list[[i]], "tos", col_scenario = "585", col_approach = "percentile", col_run = names)
climate <- get_ClimateSummary(solution_list, climateLayer_list[[i]], "velocity", col_scenario = "585", col_approach = "percentile", col_run = names)
climate
summary <- left_join(climate, df, by = "run")
write.csv(summary, paste0(output_summary, "EnsembleTheme_velocity_Summary.csv")) # save
summary
# Create selection frequency plot
solution_list <- list(s29, s30, s31, s32, s33)
col_names <- c("velocity_CanESM5", "o2os_CMCC-ESM2", "o2os_GFDL-ESM4", "o2os_IPSL-CM6A-LR", "o2os_NorESM2-MM")
s4_MMplot <- create_LowRegretSf(solution_list, col_names, PUs)
saveRDS(s4_MMplot, paste0(output_lowregret, "s4-MM-SelectionFrequency-Percentile-velocity-585.rds")) # save solution
ggSelFreq4 <- plot_SelectionFrequency(s4_MMplot, land) + ggtitle("Selection Frequency: Climate Velocity", subtitle = "Percentile, SSP 5-8.5") + theme(axis.text = element_text(size = 25))
ggsave(filename = "MM-SelectionFrequency-velocity-585.png",
plot = ggSelFreq4, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
`phos_CMCC-ESM2` <- readRDS(file.path("Output",
paste(save_name, "PU", paste0(PU_size, "km2"),
ClimateLayer_files[2], sep = "_")))
file.path("Output", paste(save_name, paste0("PlanningRegion.rds"), sep = "_"))
PUs <- read_rds(file.path("Output", paste(save_name, paste0("PlanningRegion.rds"), sep = "_")))
ggPU <- fSpatPlan_PlotPUs(PUs, land) + theme(axis.text = element_text(size = 25))
ggPU
ggsave("Layer_PlanningRegion.png",
plot = ggPU, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
aqua_sf
ggFeatureNo <- fSpatPlan_FeatureNo(aqua_sf, land) + theme(axis.text = element_text(size = 25))
ggsave("Layer_AquaMaps.png",
plot = ggFeatureNo, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
