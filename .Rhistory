ggsave(filename = "Percentile_o2_585.png",
plot = ggSol4, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
s5 <- readRDS("Output/solutions/s5-percentile-velocity-585.rds")
#' 5. Plot the spatial design
s5_plot <- s5 %>%
mutate(solution_1 = as.logical(solution_1))
ggSol5 <- fSpatPlan_PlotSolution(s5_plot, PUs, land) + ggtitle("Climate-smart design: Climate Velocity", subtitle = "Percentile, SSP 5-8.5") + theme(axis.text = element_text(size = 25))
# Velocity (percentile)
ggsave(filename = "Percentile_velocity_585.png",
plot = ggSol5, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
s1 <- readRDS("Output/solutions/s1-uninformed.rds")
# Summary
summary <- compute_summary(s1, total_area, PU_size, "uninformed", Cost = "Cost_squish")
total_area = nrow(PUs) * PU_size
# Summary
summary <- compute_summary(s1, total_area, PU_size, "uninformed", Cost = "Cost_squish")
# Summary
temp <- compute_summary(s2, total_area, PU_size, "percentile_tos_585", Cost = "Cost_squish")
summary <- rbind(temp, summary)
df <- s1 %>% as_tibble() %>%
dplyr::select(solution_1, geometry) %>%
left_join(., roc_tos_SSP585) %>%
filter(solution_1 == 1) %>%
summarize(mean_climate_warming = mean(slpTrends),
mean_log_climate_warming = mean(log(slpTrends))) %>%
dplyr::mutate(run = "uninformed")
roc_tos_SSP585 <- readRDS(file.path("Output",
paste(save_name, "PU", paste0(PU_size, "km2"),
ClimateLayer_files[3], sep = "_")))
#' ### Climate Metrics
#' 1. Rates of Climate Warming
ClimateLayer_path <- "Data/Climate/ClimateMetrics/RateOfChange/tos/"
ClimateLayer_files <- list.files(ClimateLayer_path)
roc_tos_SSP585 <- readRDS(file.path("Output",
paste(save_name, "PU", paste0(PU_size, "km2"),
ClimateLayer_files[3], sep = "_")))
#' 2. Rates of Ocean Acidification
ClimateLayer_path <- "Data/Climate/ClimateMetrics/RateOfChange/phos/"
ClimateLayer_files <- list.files(ClimateLayer_path)
roc_phos_SSP585 <- readRDS(file.path("Output",
paste(save_name, "PU", paste0(PU_size, "km2"),
ClimateLayer_files[3], sep = "_")))
#' 3. Rates of Declining Oxygen Concentration
ClimateLayer_path <- "Data/Climate/ClimateMetrics/RateOfChange/o2os/"
ClimateLayer_files <- list.files(ClimateLayer_path)
roc_o2os_SSP585 <- readRDS(file.path("Output",
paste(save_name, "PU", paste0(PU_size, "km2"),
ClimateLayer_files[3], sep = "_")))
#' 4. Climate Velocity
ClimateLayer_path <- "Data/Climate/ClimateMetrics/ClimateVelocity/"
ClimateLayer_files <- list.files(ClimateLayer_path)
velocity_SSP585 <- readRDS(file.path("Output",
paste(save_name, "PU", paste0(PU_size, "km2"),
ClimateLayer_files[3], sep = "_")))
# Summary
summary <- compute_summary(s1, total_area, PU_size, "uninformed", Cost = "Cost_squish")
# Summary
temp <- compute_summary(s2, total_area, PU_size, "percentile_tos_585", Cost = "Cost_squish")
summary <- rbind(temp, summary)
df <- s1 %>% as_tibble() %>%
dplyr::select(solution_1, geometry) %>%
left_join(., roc_tos_SSP585) %>%
filter(solution_1 == 1) %>%
summarize(mean_climate_warming = mean(slpTrends),
mean_log_climate_warming = mean(log(slpTrends))) %>%
dplyr::mutate(run = "uninformed")
# Get the mean rate of climate warming for climate-smart design
df1 <- s2 %>% as_tibble() %>%
dplyr::select(solution_1, geometry, slpTrends) %>%
filter(solution_1 == 1) %>%
summarize(mean_climate_warming = mean(slpTrends),
mean_log_climate_warming = mean(log(slpTrends))) %>%
dplyr::mutate(run = "percentile_tos_585") %>%
add_row(df, .)
summary <- summary %>% left_join(., df1, by = c("run"))
# Get the summary and the mean rate of climate warming, also the mean log rate? for all designs
run_list <- c("percentile_phos_585", "percentile_o2os_585", "percentile_velocity_585")
solution_list <- list(s3, s4, s5)
emptyList <- list()
for (i in 1:length(run_list)) {
emptyList[[i]] <- compute_summary(solution_list[[i]], total_area, PU_size, run_list[i], Cost = "Cost_squish")
}
percentileSummary <- do.call(rbind, emptyList)
summary <- summary %>% dplyr::mutate(scenario = "585",
approach = ifelse(run == "uninformed", yes = NA, no = "percentile"))
summary <- get_ClimateSummary(solution_list, climate_layer = roc_tos_SSP585, metric = "tos", col_scenario = "585", col_approach = "percentile", col_run = run_list) %>%
left_join(., percentileSummary) %>%
rbind(summary)
# Get the mean rate of ocean acidification for all designs (and also the mean of the log), starting from the uninformed
solution_list1 <- list(s1)
run_list1 <- c("uninformed")
tmp <- get_ClimateSummary(solution_list1, climate_layer = roc_phos_SSP585, metric = "phos", col_scenario = "585", col_approach = NA, col_run = run_list1)
solution_list <- list(s2, s3, s4, s5)
run_list <- c("percentile_tos_585", "percentile_phos_585", "percentile_o2os_585", "percentile_velocity_585")
summary <- get_ClimateSummary(solution_list, climate_layer = roc_phos_SSP585, metric = "phos", col_scenario = "585", col_approach = "percentile", col_run = run_list) %>%
rbind(., tmp) %>%
left_join(., summary, by = c("run", "scenario", "approach"))
# Get mean rate of decline in oxygen concentration (and also the mean of the log) for all designs, starting with uninformed
tmp <- get_ClimateSummary(solution_list1, climate_layer = roc_o2os_SSP585, metric = "o2os", col_scenario = "585", col_approach = NA, col_run = run_list1)
summary <- get_ClimateSummary(solution_list, climate_layer = roc_o2os_SSP585, metric = "o2os", col_scenario = "585", col_approach = "percentile", col_run = run_list) %>%
rbind(., tmp) %>%
left_join(., summary, by = c("run", "scenario", "approach"))
# Get median climate velocity concentrations & also mean of the log! starting from the uninformed
tmp <- get_ClimateSummary(solution_list1, climate_layer = velocity_SSP585, metric = "velocity", col_scenario = "585", col_approach = NA, col_run = run_list1)
summary <- get_ClimateSummary(solution_list, climate_layer = velocity_SSP585, metric = "velocity", col_scenario = "585", col_approach = "percentile", col_run = run_list) %>%
rbind(., tmp) %>%
left_join(., summary, by = c("run", "scenario", "approach"))
summary
#' Graph summary
# Cost
ggSummary_Cost <- plot_statistics(summary, col_name = "log10(total_cost)", y_axis = "log10(cost)", color = 1)
ggSummary_Cost
# Plot statistics
plot_statistics <- function(summary, col_name, y_axis, color) {
if (color == 1) { # For plotting related to RQ2
color_legend <- c("tos" = "#289E3D", "phos" = "#E6C173", "o2os" = "#81B0CC", "velocity" = "#855600")
summary %<>% dplyr::mutate(approach = case_when(str_detect(run, pattern = "tos") ~ "tos",
str_detect(run, pattern = "phos") ~ "phos",
str_detect(run, pattern = "o2os") ~ "o2os",
str_detect(run, pattern = "velocity") ~ "velocity"))
} else if (color == 2) { # For plotting related to RQ1
color_legend <- c("uninformed" = "#a6611a", "tos" = "#dfc27d")
summary %<>% dplyr::mutate(approach = case_when(str_detect(run, pattern = "uninformed") ~ "uninformed",
str_detect(run, pattern = "tos") ~ "tos"))
}
plot <- ggplot(data = summary, aes(x = as.factor(approach))) + # TODO: add in aes (later on) group = scenario
geom_bar(aes_string(y = col_name, fill = "as.factor(approach)"), stat = 'identity', position = position_dodge()) +
scale_fill_manual(name = 'Run',
values = color_legend) +
xlab("Run") +
ylab(y_axis) +
theme(legend.position = "bottom") +
theme_classic()
return(plot)
}
summary
#' Graph summary
# Cost
ggSummary_Cost <- plot_statistics(summary %>% filter(run != "uninformed"), col_name = "log10(total_cost)", y_axis = "log10(cost)", color = 1)
ggSummary_Cost
# Area
ggSummary_Area <- plot_statistics(summary %>% filter(run != "uninformed"), col_name = "percent_area", y_axis = "% area", color = 1)
ggSummary_Area
# Cost of Percentile approaches
ggsave(filename = "PercentileCost_585.png",
plot = ggSummary_Cost, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
# Area of Percentile approaches
ggsave(filename = "PercentileArea_585.png",
plot = ggSummary_Area, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
# Cost of Percentile approaches
ggsave(filename = "PercentileCost_585.png",
plot = ggSummary_Cost, width = 21, height = 15, dpi = 300,
path = "Figures/")
#' Graph summary
# Cost
ggSummary_Cost <- plot_statistics(summary %>% filter(run != "uninformed"), col_name = "log10(total_cost)", y_axis = "log10(cost)", color = 1) + theme(axis.text = element_text(size = 25))
ggSummary_Cost
# Area
ggSummary_Area <- plot_statistics(summary %>% filter(run != "uninformed"), col_name = "percent_area", y_axis = "% area", color = 1) + theme(axis.text = element_text(size = 25))
ggSummary_Cost
# Cost of Percentile approaches
ggsave(filename = "PercentileCost_585.png",
plot = ggSummary_Cost, width = 21, height = 15, dpi = 300,
path = "Figures/")
# Cost of Percentile approaches
ggsave(filename = "PercentileCost_585.png",
plot = ggSummary_Cost, width = 7, height = 5, dpi = 300,
path = "Figures/")
# Area of Percentile approaches
ggsave(filename = "PercentileArea_585.png",
plot = ggSummary_Area, width = 7, height = 5, dpi = 300,
path = "Figures/")
## Saving plots
# Multi Model Ensemble Selection Frequency
ggsave(filename = 'MultiModelEnsemble_Frequency.png',
plot = gg_Selection_Ensemble_Frequency, width = 7, height = 5, dpi = 300,
path = 'Figures/')
## Saving plots
# Multi Model Ensemble Selection Frequency
ggsave(filename = 'MultiModelEnsemble_Frequency.png',
plot = gg_Selection_Ensemble_Frequency, width = 21, height = 29.7, dpi = 300,
path = 'Figures/')
# Kappa
png("Figures/PercentileKappa_585.png", width = 8, height = 8)
?png
#' Get Kappa Correlation Matrix
list <- c("percentile_tos_585", "percentile_phos_585", "percentile_o2os_585", "percentile_velocity_585")
object_list <- list() # empty list
solution_list <- list(s1, s2, s3, s4, s5)
for (i in 1:length(list)) {
obj <- select_solution(solution_list[[i]], list[i])
object_list[[i]] <- obj
}
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
object_list
dev.off
dev.off()
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
s6 <- readRDS("Output/solutions/s6-feature-tos-585.rds")
s7 <- readRDS("Output/solutions/s7-feature-phos-585.rds")
s8 <- readRDS("Output/solutions/s8-feature-o2os-585.rds")
s9 <- readRDS("Output/solutions/s9-feature-velocity-585.rds")
s10 <- readRDS("Output/solutions/s10-penalty-tos-585.rds")
s11 <- readRDS("Output/solutions/s11-penalty-phos-585.rds")
s12 <- readRDS("Output/solutions/s12-penalty-o2os-585.rds")
s13 <- readRDS("Output/solutions/s13-penalty-velocity-585.rds")
#' ### Low-regret Areas
#' To create low-regret climate-smart design, we should only select areas that have been selected for all climate-smart designs utilizing different climate metrics
# Select solutions for all climate-smart designs
solution_list <- list(s6, s7, s8, s9)
col_names <- c("feature_tos_585", "feature_phos_585", "feature_o2os_585", "feature_velocity_585")
LowRegret_Feature <- create_LowRegretSf(solution_list, col_names, PUs)
gg_LowRegretFeature <- plot_lowregret(LowRegret_Feature, land)
gg_LowRegretFeature
gg_LowRegretFeature <- plot_lowregret(LowRegret_Feature, land) + theme(axis.text = element_text(size = 25))
#' Check low-regret summary
LowRegret_SummaryFeature <- compute_summary(LowRegret_Feature, total_area, PU_size, "low_regret", Cost = "Cost_squish") %>%
mutate(approach = "feature", scenario = "585")
print(LowRegret_SummaryFeature)
#' ### Low-regret Areas
#' To create low-regret climate-smart design, we should only select areas that have been selected for all climate-smart designs utilizing different climate metrics
# Select solutions for all climate-smart designs
solution_list <- list(s2, s3, s4, s5)
col_names <- c("percentile_tos_585", "percentile_phos_585", "percentile_o2os_585", "percentile_velocity_585")
LowRegret_Percentile <- create_LowRegretSf(solution_list, col_names, PUs)
gg_LowRegretPercentile <- plot_lowregret(LowRegret_Percentile, land) + theme(axis.text = element_text(size = 25))
#' Check low-regret summary
LowRegret_SummaryPercentile <- compute_summary(LowRegret_Percentile, total_area, PU_size, "low_regret", Cost = "Cost_squish") %>%
mutate(approach = "percentile", scenario = "585")
print(LowRegret_SummaryPercentile)
#' ### Low-regret Areas
#' To create low-regret climate-smart design, we should only select areas that have been selected for all climate-smart designs utilizing different climate metrics
# Select solutions for all climate-smart designs
solution_list <- list(s10, s11, s12, s13)
col_names <- c("penalty_tos_585", "penalty_phos_585", "penalty_o2os_585", "penalty_velocity_585")
LowRegret_Penalty <- create_LowRegretSf(solution_list, col_names, PUs)
gg_LowRegretPenalty <- plot_lowregret(LowRegret_Penalty, land) + theme(axis.text = element_text(size = 25))
#' Check low-regret summary
LowRegret_SummaryPenalty <- compute_summary(LowRegret_Penalty, total_area, PU_size, "low_regret", Cost = "Cost_squish") %>%
mutate(approach = "penalty", scenario = "585")
print(LowRegret_SummaryPenalty)
# Low-regret areas
ggsave(filename = "PercentileLowRegret_585.png",
plot = gg_LowRegretPercentile, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "FeatureLowRegret_585.png",
plot = gg_LowRegretFeature, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "PenaltyLowRegret_585.png",
plot = gg_LowRegretPenalty, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
# Kappa
list <- c("LowRegret_Feature_585", "LowRegret_Percentile_585", "LowRegret_Penalty_585")
object_list <- list() # empty list
solution_list <- list(LowRegret_Feature, LowRegret_Percentile, LowRegret_Penalty)
for (i in 1:length(list)) {
obj <- select_solution(solution_list[[i]], list[i])
object_list[[i]] <- obj
}
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
# Check the Climate Metrics of the Low-Regret Areas
LowRegretFeature_df <- LowRegret_Feature %>%
as_tibble() %>%
dplyr::select(-feature_velocity_585, -feature_o2os_585, -feature_phos_585, -feature_tos_585, -Cost, -Cost_squish) %>%
dplyr::rename(SelectionFeature = selection) %>%
left_join(., roc_tos_SSP585 %>% as_tibble() %>% dplyr::select(slpTrends, geometry), by = "geometry") %>%
dplyr::rename(tos = slpTrends, Feature_Solution = solution_1) %>%
left_join(., roc_phos_SSP585 %>% as_tibble() %>% dplyr::select(slpTrends, geometry), by = "geometry") %>%
dplyr::rename(phos = slpTrends) %>%
left_join(., roc_o2os_SSP585 %>% as_tibble() %>% dplyr::select(slpTrends, geometry), by = "geometry") %>%
dplyr::rename(o2os = slpTrends) %>%
left_join(., velocity_SSP585 %>% as_tibble() %>% dplyr::select(voccMag, geometry), by = "geometry") %>%
dplyr::rename(velocity = voccMag)
LowRegretPercentile_df <- LowRegret_Percentile %>%
as_tibble() %>%
dplyr::select(-percentile_velocity_585, -percentile_o2os_585, -percentile_phos_585, -percentile_tos_585, -Cost, -Cost_squish) %>%
dplyr::rename(SelectionPercentile = selection, Percentile_Solution = solution_1)
LowRegretPenalty_df <- LowRegret_Penalty %>%
as_tibble() %>%
dplyr::select(-penalty_velocity_585, -penalty_o2os_585, -penalty_phos_585, -penalty_tos_585, -Cost, -Cost_squish) %>%
dplyr::rename(SelectionPenalty = selection, Penalty_Solution = solution_1)
LowRegretAll_sf <- left_join(LowRegretFeature_df, LowRegretPercentile_df, by = c("cellID", "geometry")) %>%
left_join(., LowRegretPenalty_df, by = c("cellID", "geometry")) %>%
dplyr::mutate(SelectionAll = case_when((SelectionFeature == 4 & SelectionPercentile == 4 & SelectionPenalty == 4) ~ 1,
TRUE ~ 0)) %>%
st_as_sf(sf_column_name = "geometry")
LowRegret_SummaryAll <- lowRegret_ClimateSummary(df = LowRegretAll_sf, approach_column = "Feature_Solution") %>%
rbind(., lowRegret_ClimateSummary(df = LowRegretAll_sf, approach_column = "Percentile_Solution")) %>%
rbind(., lowRegret_ClimateSummary(df = LowRegretAll_sf, approach_column = "Penalty_Solution")) %>%
as_tibble() %>%
left_join(., LowRegret_SummaryAll, by = "approach")
LowRegret_SummaryAll <- LowRegret_SummaryFeature %>%
rbind(., LowRegret_SummaryPercentile) %>%
rbind(., LowRegret_SummaryPenalty)
LowRegret_SummaryAll <- lowRegret_ClimateSummary(df = LowRegretAll_sf, approach_column = "Feature_Solution") %>%
rbind(., lowRegret_ClimateSummary(df = LowRegretAll_sf, approach_column = "Percentile_Solution")) %>%
rbind(., lowRegret_ClimateSummary(df = LowRegretAll_sf, approach_column = "Penalty_Solution")) %>%
as_tibble() %>%
left_join(., LowRegret_SummaryAll, by = "approach")
# Cost + Area
ggComparison_Cost_LowRegret <- plot_LowRegretStatistics(LowRegret_SummaryAll, col_name = "log10(total_cost)", y_axis = "log10(cost)") + theme(axis.text = element_text(size = 25))
ggComparison_Cost_LowRegret
ggComparison_Area_LowRegret <- plot_LowRegretStatistics(LowRegret_SummaryAll, col_name = "percent_area", y_axis = "% area")  + theme(axis.text = element_text(size = 25))
ggsave(filename = "LowRegretCost_585.png",
plot = ggComparison_Cost_LowRegret, width = 7, height = 5, dpi = 300,
path = "Figures/")
ggsave(filename = "LowRegretArea_585.png",
plot = ggComparison_Area_LowRegret, width = 7, height = 5, dpi = 300,
path = "Figures/")
#' Create Low-Regret Areas across all Low-Regret Spatial Plans for the three approaches
LowRegret_sf <- LowRegretAll_sf %>%
dplyr::rename(solution_1 = SelectionAll) %>%
dplyr::mutate(solution_1 = as.logical(solution_1))
ggLowRegret_All <- fSpatPlan_PlotSolution(LowRegret_sf, PUs, land) + ggtitle("Low-Regret Areas", subtitle = "Across all approaches") + theme(axis.text = element_text(size = 25))
ggLowRegret_All
ggsave(filename = "LowRegretAll_585.png",
plot = ggLowRegret_All, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
#### Creating some plots explaining the different approaches ####
colnames(aqua_sf)
#' 5. Annual marine heatwave intensity
# Conservation Features
aqua_sf <- read_rds(file.path("Output",
paste(save_name, "PU", paste0(PU_size,"km2"),
"AquaMaps_Output.rds", sep = "_")))
# Changing to 1s and 0s
CutOff = 0.5
subset_aqua_sf <- aqua_sf %>%
as_tibble() %>%
dplyr::select(Doryrhamphus_excisus.excisus, Padina_sanctae.crucis, Platybelone_argalus.platyura,
Tylosurus_acus.acus, Tylosurus_acus.melanotus)
aqua_sf <- aqua_sf %>%
mutate_at(vars(colnames(subset_aqua_sf)),
funs(case_when(. >= CutOff ~ 1,
. <= CutOff ~ 0,
is.na(.) ~ 0)))
#### Creating some plots explaining the different approaches ####
colnames(aqua_sf)
#### Creating some plots explaining the different approaches ####
colnames(aqua_sf)[1]
colnames(aqua_sf)[4000]
colnames(aqua_sf)[8712]
colnames(aqua_sf)[8711]
#### Creating some plots explaining the different approaches ####
aqm_subset1 <- aqua_sf %>% select(colnames(aqua_sf)[1])
#### Creating some plots explaining the different approaches ####
aqm_subset1 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[1])
aqm_subset1
#### Creating some plots explaining the different approaches ####
aqm_subset1 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[1]) %>%
dplyr::mutate(colnames(aqua_sf)[1] = as.logical(colnames(aqua_sf)[1]))
#### Creating some plots explaining the different approaches ####
aqm_subset1 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[1]) %>%
dplyr::mutate(colnames(aqua_sf)[1] := as.logical(colnames(aqua_sf)[1]))
#### Creating some plots explaining the different approaches ####
aqm_subset1 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[1]) %>%
dplyr::mutate(colnames(aqua_sf)[1] == as.logical(colnames(aqua_sf)[1]))
aqm_subset1
#### Creating some plots explaining the different approaches ####
aqm_subset1 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[1]) %>%
dplyr::mutate(Abalistes_filamentosus = as.logical(Abalistes_filamentosus))
aqm_subset1
plot_AQMFeatures <- function(s1, PlanUnits, world){
gg <- ggplot() +
geom_sf(data = s1, aes(fill = solution_1), colour = NA, size = 0.1, show.legend = TRUE) +
#    geom_sf(data = PlanUnits, colour = "lightblue", fill = NA, size = 0.1, show.legend = FALSE) +
geom_sf(data = world, colour = "grey20", fill = "grey20", alpha = 0.9, size = 0.1, show.legend = FALSE) +
coord_sf(xlim = st_bbox(PlanUnits)$xlim, ylim = st_bbox(PlanUnits)$ylim) +
scale_colour_manual(values = c("TRUE" = "#8856a7",
"FALSE" = "#e0ecf4"),
aesthetics = "fill") +
theme_bw()
}
#### Creating some plots explaining the different approaches ####
aqm_subset1 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[1]) %>%
dplyr::mutate(Abalistes_filamentosus = as.logical(Abalistes_filamentosus))
aqm_subset1
aqm1_Plot <- plot_AQMFeatures(aqm_subset1, PUs, land) + ggtitle("Species Distribution #1", subtitle = "Abalistes filamentosus")
aqm1_Plot
?aes_string
plot_AQMFeatures <- function(s1, PlanUnits, world, column){
gg <- ggplot() +
geom_sf(data = s1, aes_string(fill = column), colour = NA, size = 0.1, show.legend = TRUE) +
#    geom_sf(data = PlanUnits, colour = "lightblue", fill = NA, size = 0.1, show.legend = FALSE) +
geom_sf(data = world, colour = "grey20", fill = "grey20", alpha = 0.9, size = 0.1, show.legend = FALSE) +
coord_sf(xlim = st_bbox(PlanUnits)$xlim, ylim = st_bbox(PlanUnits)$ylim) +
scale_colour_manual(values = c("TRUE" = "#8856a7",
"FALSE" = "#e0ecf4"),
aesthetics = "fill") +
theme_bw()
}
aqm1_Plot <- plot_AQMFeatures(aqm_subset1, PUs, land, column = "Abalistes_filamentosus") + ggtitle("Species Distribution #1", subtitle = "Abalistes filamentosus")
aqm1_Plot
aqm1_percentile <- create_PercentileLayer(aqua_sf = aqm1_Plot, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585, PUs = PUs)
aqm1_percentile <- create_PercentileLayer(aqua_sf = aqm_subset1, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585, PUs = PUs)
aqm1_percentile
aqm1_PercentilePlot <- plot_AQMFeatures(aqm1_percentile, PUs, land, column = "Abalistes_filamentosus") + ggtitle("Species Distribution #1", subtitle = "Abalistes filamentosus")
aqm1_PercentilePlot
aqm1_percentile <- create_PercentileLayer(aqua_sf = aqm_subset1, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585, PUs = PUs) %>%
dplyr::mutate(Abalistes_filamentosus = as.logical(Abalistes_filamentosus))
aqm1_PercentilePlot <- plot_AQMFeatures(aqm1_percentile, PUs, land, column = "Abalistes_filamentosus") + ggtitle("Species Distribution #1", subtitle = "Abalistes filamentosus")
aqm1_PercentilePlot
colnames(aqua_sf)[4000]
aqm_subset2 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[4000]) %>%
dplyr::mutate(Hime_japonica = as.logical(Hime_japonica))
aqm2_Plot <- plot_AQMFeatures(aqm_subset2, PUs, land, column = "Hime_japonica") + ggtitle("Species Distribution #1", subtitle = "Hime japonica")
aqm2_Plot
aqm2_percentile <- create_PercentileLayer(aqua_sf = aqm_subset2, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585, PUs = PUs) %>%
dplyr::mutate(Hime_japonica = as.logical(Hime_japonica))
aqm2_PercentilePlot <- plot_AQMFeatures(aqm2_percentile, PUs, land, column = "Hime_japonica") + ggtitle("Species Distribution #1", subtitle = "Hime_japonica")
aqm2_PercentilePlot
colnames(aqua_sf)[8711]
aqm_subset3 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[4000]) %>%
dplyr::mutate(Zyzzya_fuliginosa = as.logical(Zyzzya_fuliginosa))
aqm_subset3 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[8711]) %>%
dplyr::mutate(Zyzzya_fuliginosa = as.logical(Zyzzya_fuliginosa))
aqm3_Plot <- plot_AQMFeatures(aqm_subset3, PUs, land, column = "Zyzzya_fuliginosa") + ggtitle("Species Distribution #1", subtitle = "Zyzzya fuliginosa")
aqm3_percentile <- create_PercentileLayer(aqua_sf = aqm_subset3, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585, PUs = PUs) %>%
dplyr::mutate(Zyzzya_fuliginosa = as.logical(Zyzzya_fuliginosa))
aqm3_PercentilePlot <- plot_AQMFeatures(aqm3_percentile, PUs, land, column = "Zyzzya_fuliginosa") + ggtitle("Species Distribution #1", subtitle = "Zyzzya_fuliginosa")
aqm3_PercentilePlot
ClimateFeature <- create_FeatureLayer(aqua_sf, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585)
ClimateFeature
max(roc_tos_SSP585)
max(roc_tos_SSP585$slpTrends)
min(roc_tos_SSP585$slpTrends)
### Features
gg_roc_tos_SSP585 <- fSpatPlan_PlotClimate(roc_tos_SSP585, land, metric = "roc_tos", from = 0.02, to = 0.05)
gg_roc_tos_SSP585
ClimateFeature
ClimateFeature <- create_FeatureLayer(aqua_sf, metric_name = "tos", colname = "slpTrends", metric_df = roc_tos_SSP585) %>%
dplyr::select(climate_layer, geometry) %>%
dplyr::mutate(climate_layer = as.logical(climate_layer))
featsub <- plot_AQMFeatures(ClimateFeature, PUs, land, column = "climate_layer") + ggtitle("Low Exposure Areas")
featsub
# Percentile workflow figures
ggsave(filename = "01a_Percentile_AquaMapsSubset.png",
plot = aqm1_Plot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "01b_Percentile_AquaMapsSubset.png",
plot = aqm1_PercentilePlot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "02a_Percentile_AquaMapsSubset.png",
plot = aqm2_Plot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "02b_Percentile_AquaMapsSubset.png",
plot = aqm2_PercentilePlot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "03a_Percentile_AquaMapsSubset.png",
plot = aqm3_Plot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "03b_Percentile_AquaMapsSubset.png",
plot = aqm3_PercentilePlot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
# Feature workflow figures
ggsave(filename = "01_Feature_Climate.png",
plot = gg_roc_tos_SSP585, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "02_Feature_Climate.png",
plot = featsub, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
colnames(aqua_sf)[2500]
aqm_subset3 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[2500]) %>%
dplyr::mutate(Dasycaris_symbiotes = as.logical(Dasycaris_symbiotes))
aqm3_Plot <- plot_AQMFeatures(aqm_subset3, PUs, land, column = "Dasycaris_symbiotes") + ggtitle("Species Distribution #1", subtitle = "Dasycaris_symbiotes")
aqm3_Plot
aqm1_Plot <- plot_AQMFeatures(aqm_subset1, PUs, land, column = "Abalistes_filamentosus") + ggtitle("Species Distribution #1", subtitle = "Abalistes filamentosus") + theme(axis.text = element_text(size = 25))
aqm1_PercentilePlot <- plot_AQMFeatures(aqm1_percentile, PUs, land, column = "Abalistes_filamentosus") + ggtitle("Species Distribution #1", subtitle = "Abalistes filamentosus") + theme(axis.text = element_text(size = 25))
aqm_subset2 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[4000]) %>%
dplyr::mutate(Hime_japonica = as.logical(Hime_japonica))
aqm2_Plot <- plot_AQMFeatures(aqm_subset2, PUs, land, column = "Hime_japonica") + ggtitle("Species Distribution #1", subtitle = "Hime japonica") + theme(axis.text = element_text(size = 25))
aqm2_PercentilePlot <- plot_AQMFeatures(aqm2_percentile, PUs, land, column = "Hime_japonica") + ggtitle("Species Distribution #1", subtitle = "Hime_japonica") + theme(axis.text = element_text(size = 25))
aqm_subset3 <- aqua_sf %>% dplyr::select(colnames(aqua_sf)[8711]) %>%
dplyr::mutate(Zyzzya_fuliginosa = as.logical(Zyzzya_fuliginosa))
aqm3_Plot <- plot_AQMFeatures(aqm_subset3, PUs, land, column = "Zyzzya_fuliginosa") + ggtitle("Species Distribution #1", subtitle = "Zyzzya fuliginosa") + theme(axis.text = element_text(size = 25))
aqm3_PercentilePlot <- plot_AQMFeatures(aqm3_percentile, PUs, land, column = "Zyzzya_fuliginosa") + ggtitle("Species Distribution #1", subtitle = "Zyzzya_fuliginosa") + theme(axis.text = element_text(size = 25))
### Features
gg_roc_tos_SSP585 <- fSpatPlan_PlotClimate(roc_tos_SSP585, land, metric = "roc_tos", from = 0.02, to = 0.05) + theme(axis.text = element_text(size = 25))
featsub <- plot_AQMFeatures(ClimateFeature, PUs, land, column = "climate_layer") + ggtitle("Low Exposure Areas") + theme(axis.text = element_text(size = 25))
# Percentile workflow figures
ggsave(filename = "01a_Percentile_AquaMapsSubset.png",
plot = aqm1_Plot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "01b_Percentile_AquaMapsSubset.png",
plot = aqm1_PercentilePlot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "02a_Percentile_AquaMapsSubset.png",
plot = aqm2_Plot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "02b_Percentile_AquaMapsSubset.png",
plot = aqm2_PercentilePlot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "03a_Percentile_AquaMapsSubset.png",
plot = aqm3_Plot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "03b_Percentile_AquaMapsSubset.png",
plot = aqm3_PercentilePlot, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
# Feature workflow figures
ggsave(filename = "01_Feature_Climate.png",
plot = gg_roc_tos_SSP585, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
ggsave(filename = "02_Feature_Climate.png",
plot = featsub, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
