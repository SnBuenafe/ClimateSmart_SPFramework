}
}
scenario_path <- c("SSP 1-2.6", "SSP 2-4.5", "SSP 5-8.5")
scenario_object <- c("SSP126", "SSP245", "SSP585")
model_list <- c("CanESM5", "CMCC-ESM2", "GFDL-ESM4", "IPSL-CM6A-LR", "NorESM2-MM")
for(i in 1:length(scenario_path)) {
ClimateLayer_files <- list.files(file.path(path, "MHW", scenario_path[i]))
for (j in 1:length(ClimateLayer_files)){
for (k in 1:nrow(ID)) {
df <- readRDS(file.path("Output",
paste(save_name, "ClimateLayer", ID$metric[k], model[j], paste0(scenario[i], ".rds"), sep = "_")))
assign(x = paste(ID$metric[k], model[j], scenario_object[i], sep = "_"), value = df, envir=.GlobalEnv)
}
}
}
scenario
scenario_path
scenario_object
for(i in 1:length(scenario_path)) {
ClimateLayer_files <- list.files(file.path(path, "MHW", scenario_path[i]))
for (j in 1:length(ClimateLayer_files)){
for (k in 1:nrow(ID)) {
df <- readRDS(file.path("Output",
paste(save_name, "ClimateLayer", ID$metric[k], model[j], paste0(scenario_path[i], ".rds"), sep = "_")))
assign(x = paste(ID$metric[k], model[j], scenario_object[i], sep = "_"), value = df, envir=.GlobalEnv)
}
}
}
# Plot MHW metrics
scenario_object <- c("SSP126", "SSP245", "SSP585")
for(j in 1:length(scenario_object)) {
for(i in 1:nrow(ID)) {
x <- get(paste0(ID$metric[i], "_", scenario_object[j]))
gg_MHW <- fSpatPlan_PlotClimate(ClimateLayer = x,
world = land,
metric = ID$metric[i]) +
theme(axis.text = element_text(size = 25))
ggsave(paste0(paste("Layer", ID$metric[i], scenario_object[j], sep="_"), ".png"),
plot = gg_MHW, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
}
}
paste0(ID$metric[i], "_", model_list[k], modelscenario_object[j])
paste0(ID$metric[i], "_", model_list[k], scenario_object[j])
model_list
k = 1
paste0(ID$metric[i], "_", model_list[k], "_", scenario_object[j])
paste("Layer", ID$metric[i], scenario_object[j], sep="_"), ".png")
paste0(paste("Layer", ID$metric[i], scenario_object[j], sep="_"), ".png")
paste0(paste("Layer", ID$metric[i], model_list[k], scenario_object[j], sep="_"), ".png")
for(k in 1:length(model_list)) {
for(j in 1:length(scenario_object)) {
for(i in 1:nrow(ID)) {
x <- get(paste0(ID$metric[i], "_", model_list[k], "_", scenario_object[j]))
gg_MHW <- fSpatPlan_PlotClimate(ClimateLayer = x,
world = land,
metric = ID$metric[i]) +
theme(axis.text = element_text(size = 25))
ggsave(paste0(paste("Layer", ID$metric[i], model_list[k], scenario_object[j], sep="_"), ".png"),
plot = gg_MHW, width = 21, height = 29.7, dpi = 300,
path = "Figures/")
}
}
}
#### Preliminaries ####
#### nMDS ####
library(vegan)
set.seed(2)
community_matrix=matrix(
sample(1:100,300,replace=T),nrow=10,
dimnames=list(paste("community",1:10,sep=""),paste("sp",1:30,sep="")))
community_matrix
example_NMDS=metaMDS(community_matrix, # Our community-by-species matrix
k=2) # The number of reduced dimensions
example_NMDS
example_NMDS=metaMDS(community_matrix,k=2,trymax=100)
example_NMDS=metaMDS(community_matrix, # Our community-by-species matrix
k=2) # The number of reduced dimensions
example_NMDS
example_NMDS=metaMDS(community_matrix,k=2,trymax=100)
example_NMDS
plot(example_NMDS)
ordiplot(example_NMDS,type="n")
orditorp(example_NMDS,display="species",col="red",air=0.01)
orditorp(example_NMDS,display="sites",cex=1.25,air=0.01)
treat=c(rep("Treatment1",5),rep("Treatment2",5))
ordiplot(example_NMDS,type="n")
ordihull(example_NMDS,groups=treat,draw="polygon",col="grey90",label=F)
orditorp(example_NMDS,display="species",col="red",air=0.01)
orditorp(example_NMDS,display="sites",col=c(rep("green",5),rep("blue",5)),
air=0.01,cex=1.25)
?metaMDS
community_matrix
s2 <- readRDS("Output/solutions/s2-EM-Percentile-tos-585.rds")
s2
s2 <- readRDS("Output/solutions/s2-EM-Percentile-tos-585.rds") %>% as_tibble() %>%  dplyr::select(solution_1)
#### Preliminaries ####
# Description
# Load functions
source("HelperFunctions/SpatPlan_Extras.R") # Load the extras, including functions and libraries
source("HelperFunctions/SpatPlan_HelperFxns_WestPac.R") # Load helper functions written specifically for this spatial planning project
source("HelperFunctions/SpatPlan_IterationFxns_WestPac.R") # Load loop functions written specifically for producing iterations
output_solutions <- "Output/solutions/"
output_summary <- "Output/summary/"
output_lowregret <- "Output/lowregret/"
s2 <- readRDS("Output/solutions/s2-EM-Percentile-tos-585.rds") %>% as_tibble() %>%  dplyr::select(solution_1)
s2
s2 <- readRDS("Output/solutions/s2-EM-Percentile-tos-585.rds") %>% as_tibble() %>% dplyr::select(solution_1, cellID)
s2 <- readRDS("Output/solutions/s2-EM-Percentile-tos-585.rds") %>% as_tibble() %>% dplyr::select(solution_1) %>% dplyr::mutate(cellID = row_number())
s2
s2 <- readRDS("Output/solutions/s2-EM-Percentile-tos-585.rds") %>% as_tibble() %>%
dplyr::select(solution_1) %>%
dplyr::mutate(cellID = row_number()) %>%
dplyr::rename(solution_1 = s2)
s2 <- readRDS("Output/solutions/s2-EM-Percentile-tos-585.rds") %>% as_tibble() %>%
dplyr::select(solution_1) %>%
dplyr::mutate(cellID = row_number()) %>%
dplyr::rename(s2 = solution_1)
s2
s2 <- readRDS("Output/solutions/s2-EM-Percentile-tos-585.rds") %>% as_tibble() %>%
dplyr::select(solution_1) %>%
dplyr::mutate(cellID = paste0("PU_", row_number())) %>%
dplyr::rename(s2 = solution_1)
s2
pivot <- s2 %>%
pivot_wider(names_from = cellID, values_from = s2)
pivot
head(pivot)
pivot$PU_307
s3 <- readRDS("Output/solutions/s3-EM-Percentile-phos-585.rds") %>% as_tibble() %>%
dplyr::select(solution_1) %>%
dplyr::mutate(cellID = paste0("PU_", row_number())) %>%
dplyr::rename(s3 = solution_1)
pivot3 <- s3 %>%
pivot_wider(names_from = cellID, values_from = s3)
pivot_combined <- pivot %>% add_row(pivot3)
pivot_combined
pivot_combined$PU_1
pivot_combined$PU_240
s2 <- readRDS("Output/solutions/s2-EM-Percentile-tos-585.rds") %>% as_tibble() %>%
dplyr::select(solution_1) %>%
dplyr::mutate(cellID = paste0("PU_", row_number())) %>%
dplyr::mutate(solution = "s2")
pivot <- s2 %>%
pivot_wider(names_from = cellID, values_from = s2)
pivot <- s2 %>%
pivot_wider(!solution, names_from = cellID, values_from = s2)
s2
pivot <- s2 %>%
pivot_wider(!solution, names_from = cellID, values_from = solution_1)
pivot$PU_7
pivot$solution
pivot <- s2 %>%
pivot_wider(names_from = cellID, values_from = solution_1)
pivot$solution
s3 <- readRDS("Output/solutions/s3-EM-Percentile-phos-585.rds") %>% as_tibble() %>%
dplyr::select(solution_1) %>%
dplyr::mutate(cellID = paste0("PU_", row_number()))  %>%
dplyr::mutate(solution = "s3")
pivot3 <- s3 %>%
pivot_wider(names_from = cellID, values_from = solution_1)
pivot_combined <- pivot %>% add_row(pivot3)
pivot_combined
pivot_combined$solution
s4 <- readRDS("Output/solutions/s4-EM-Percentile-o2os-585.rds") %>% as_tibble() %>%
dplyr::select(solution_1) %>%
dplyr::mutate(cellID = paste0("PU_", row_number()))  %>%
dplyr::mutate(solution = "s4")
pivot4 <- s4 %>%
pivot_wider(names_from = cellID, values_from = solution_1)
pivot4
pivot_combined %<>% add_row(pivot4)
pivot_combined
community_matrix
class(community_matrix)
data.matrix(pivot_combined)
head(data.matrix(pivot_combined))
matrix <- data.matrix(pivot_combined)
View(matrix)
?data.matrix
pivot_combined$solution
matrix <- data.matrix(pivot_combined, rownames = "solution")
View(matrix)
rownames(matrix) <- x[,"solution"]
rownames(matrix) <- matrix[,"solution"]
View(matrix)
rownames(matrix)
matrix[,"solution"]
pivot_combined <- pivot %>% add_row(pivot3)
pivot_combined %<>% add_row(pivot4)
pivot_combined
matrix <- data.matrix(pivot_combined)
rownames(matrix)
matrix[,"solution"]
matrix[,1]
View(matrix)
pivot <- s2 %>%
pivot_wider(names_from = cellID, values_from = solution_1)
pivot
pivot$solution
tmp <- data.matrix(pivot$solution)
View(tmp)
pivot3 <- s3 %>%
pivot_wider(names_from = cellID, values_from = solution_1)
pivot_combined <- pivot %>% add_row(pivot3)
pivot4 <- s4 %>%
pivot_wider(names_from = cellID, values_from = solution_1)
pivot_combined %<>% add_row(pivot4)
View(pivot_combined)
matrix <- data.matrix(pivot_combined)
View(matrix)
?data.matrix
matrix <- as.matrix(pivot_combined[,-1])
rownames(matrix) <- pivot_combined[,1]
pivot_combined[,1]
rownames(matrix)
View(matrix)
rownames(matrix) <- pivot_combined[,1]
matrix <- data.matrix(pivot_combined[,-1], rownames.force = TRUE)
rownames(matri)
rownames(matrix)
rownames(matrix) <- pivot_combined[,1]
pivot_combined[,1]
rownames(matrix) <- pivot_combined[,1] %>% pull
rownames(matrix)
solution <- seq(from = 2, to = 5, by = 1) # solution names, check metadata
solution <-lapply(solution, function(x) {
y <- paste0("s", x)
}) %>% unlist()
solution
i = 1
path <- "Output/solutions/"
pattern <- paste0(solution[i], "-")
file <- list.files(pattern = paste0("^", pattern))
file
pattern
file <- list.files(pattern = pattern)
file
?list.files
file <- list.files(path = path, pattern = paste0("^", pattern))
file
solution
pivot <- list() # empty list
for(i in 1:length(solution)) {
path <- "Output/solutions/"
pattern <- paste0(solution[i], "-")
file <- list.files(path = path, pattern = paste0("^", pattern))
s <- readRDS(paste0(path, file)) %>% as_tibble() %>%
dplyr::select(solution_1) %>%
dplyr::mutate(cellID = paste0("PU_", row_number())) %>%
dplyr::mutate(solution = solution[i])
pivot[[i]] <- s %>%
pivot_wider(names_from = cellID, values_from = solution_1)
}
pivot_combined <- do.call(bind_rows, pivot)
pivot_combined
matrix <- data.matrix(pivot_combined[,-1], rownames.force = TRUE)
rownames(matrix) <- solution
matrix
View(matrix)
ncol(matrix)
?metaMDS
solution.mds <- metaMDS(matrix, distance = "chisq", autotransform = FALSE)
solution.mds <- metaMDS(matrix, distance = "jaccard", autotransform = FALSE)
solution.mds <- metaMDS(matrix, distance = "jaccard", autotransform = FALSE, try = 100)
solution <- seq(from = 2, to = 361, by = 1) # solution names, check metadata
solution <-lapply(solution, function(x) {
y <- paste0("s", x)
}) %>% unlist()
solution
pivot <- list() # empty list
for(i in 1:length(solution)) {
path <- "Output/solutions/"
pattern <- paste0(solution[i], "-")
file <- list.files(path = path, pattern = paste0("^", pattern))
s <- readRDS(paste0(path, file)) %>% as_tibble() %>%
dplyr::select(solution_1) %>%
dplyr::mutate(cellID = paste0("PU_", row_number())) %>%
dplyr::mutate(solution = solution[i])
pivot[[i]] <- s %>%
pivot_wider(names_from = cellID, values_from = solution_1)
}
pivot_combined <- do.call(bind_rows, pivot)
pivot_combined
matrix <- data.matrix(pivot_combined[,-1], rownames.force = TRUE)
rownames(matrix) <- solution
View(matrix)
solution.mds <- metaMDS(matrix, distance = "jaccard", autotransform = FALSE, try = 100)
solution.mds <- metaMDS(matrix, distance = "jaccard", autotransform = FALSE, try = 200)
solution.mds <- metaMDS(matrix, distance = "jaccard", autotransform = FALSE, try = 1000)
plot(solution.mds)
gg_ordiplot(comMDS, groups = dat$Station, ellipse = FALSE)
library(ggordiplots)
install.packages("ggordiplots")
library(ggordiplots)
install.packages("ggordiplots")
remotes::install_github("jfq3/ggordiplots")
library(ggordiplots)
install.packages("remotes")
install.packages("remotes")
remotes::install_github("jfq3/ggordiplots")
remotes::install_github("jfq3/ggordiplots", force = TRUE)
sessionInfo()
sessionInfo()
sessionInfo()
remotes::install_github("jfq3/ggordiplots", force = TRUE)
install.packages("remotes")
remotes::install_github("jfq3/ggordiplots", force = TRUE)
library(ggordiplots)
remotes::install_github("jfq3/ggordiplots", force = TRUE)
library(ggordiplots)
gg_ordiplot(comMDS, groups = dat$Station, ellipse = FALSE)
gg_ordiplot(solution.mds, ellipse = FALSE)
?gg_ordiplot
write.csv(pivot_combined, "Output/nmds/nmds_df.csv")
df_groups <- read_csv("Output/nmds/df_groups.csv")
df_groups <- read.csv("Output/nmds/df_groups.csv")
df_groups
df_groups <- read.csv("Output/nmds/df_groups.csv") %>% as_tibble()
?read_csv
#### Preliminaries ####
# Description
# Load functions
source("HelperFunctions/SpatPlan_Extras.R") # Load the extras, including functions and libraries
#### Preliminaries ####
# Description
# Load functions
source("HelperFunctions/SpatPlan_Extras.R") # Load the extras, including functions and libraries
#### Preliminaries ####
# Description
# Load functions
source("HelperFunctions/SpatPlan_Extras.R") # Load the extras, including functions and libraries
#### Preliminaries ####
# Description
# Load functions
source("HelperFunctions/SpatPlan_Extras.R") # Load the extras, including functions and libraries
#install.packages("pacman")
devtools::install_github("JorGarMol/VoCC", dependencies = TRUE, build_vignettes = TRUE)
install.packages("pacman")
install.packages("pacman")
install.packages("devtools")
devtools::install_github("JorGarMol/VoCC", dependencies = TRUE, build_vignettes = TRUE)
library(VoCC)
source("HelperFunctions/SpatPlan_HelperFxns_WestPac.R") # Load helper functions written specifically for this spatial planning project
source("HelperFunctions/SpatPlan_IterationFxns_WestPac.R") # Load loop functions written specifically for producing iterations
output_solutions <- "Output/solutions/"
output_summary <- "Output/summary/"
output_lowregret <- "Output/lowregret/"
df_groups <- read.csv("Output/nmds/df_groups.csv") %>% as_tibble()
library(ggordiplots)
gg_ordiplot(solution.mds, ellipse = FALSE)
gg_ordiplot(solution.mds, groups = df_groups$scenario, ellipse = FALSE)
gg_ordiplot(solution.mds, groups = df_groups$approach, ellipse = FALSE)
gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = FALSE)
gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = TRUE)
?gg_ordiplot
gg_ordiplot(solution.mds, groups = df_groups$metric, hulls = TRUE)
gg_ordiplot(solution.mds, groups = df_groups$metric, hull = TRUE)
gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = TRUE)
gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = TRUE, kindf ="sd")
gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = TRUE, kind ="sd")
gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = TRUE, kind ="se")
gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = TRUE, kind ="sd")
solution.mds
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = TRUE, kind ="sd")
Ordi_Obj
Ordi_Obj$df_mean.ord
p <- Ordi_Obj +
geom_text(data = OrdiObj$df_mean.ord, aes(x = x, y = y, label = Group), size = 3)
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = TRUE, kind ="sd")
p <- Ordi_Obj +
geom_text(data = OrdiObj$df_mean.ord, aes(x = x, y = y, label = Group), size = 3)
p <- Ordi_Obj +
geom_text(data = Ordi_Obj$df_mean.ord, aes(x = x, y = y, label = Group), size = 3)
p
p <- Ordi_Obj$plot +
geom_text(data = Ordi_Obj$df_mean.ord, aes(x = x, y = y, label = Group), size = 3)
p
# Scenario Theme
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$scenario, ellipse = TRUE, kind ="sd")
p <- Ordi_Obj$plot +
geom_text(data = Ordi_Obj$df_mean.ord, aes(x = x, y = y, label = Group), size = 3)
p
p <- Ordi_Obj$plot +
geom_text(data = Ordi_Obj$df_mean.ord, aes(x = x, y = y, label = Group), size = 3) +
theme_classic()
p
p <- Ordi_Obj$plot +
geom_text(data = Ordi_Obj$df_mean.ord, aes(x = x, y = y, label = Group, color = Group), size = 3) +
theme_classic()
p
p <- Ordi_Obj$plot +
geom_text(data = Ordi_Obj$df_mean.ord, aes(x = x, y = y, label = Group, color = Group), size = 5) +
theme_classic()
p
p <- Ordi_Obj$plot +
geom_text(data = Ordi_Obj$df_mean.ord, aes(x = x, y = y, label = Group, color = Group), size = 4) +
theme_classic()
p
?gg_ordiplot
# Scenario Theme
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$scenario, ellipse = TRUE, kind ="sd", shape = 0)
# Scenario Theme
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$scenario, ellipse = TRUE, kind ="sd", size = 0.5)
p <- Ordi_Obj$plot +
geom_text(data = Ordi_Obj$df_mean.ord, aes(x = x, y = y, label = Group, color = Group), size = 4) +
theme_bw()
p
# Scenario Theme
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$approach, ellipse = TRUE, kind ="sd")
p <- Ordi_Obj$plot +
geom_text(data = Ordi_Obj$df_mean.ord, aes(x = x, y = y, label = Group, color = Group), size = 4) +
theme_bw()
p
df_groups$scenario
# Scenario Theme
colors <- c("SSP1-2.6" = "#289E3D", "SSP2-4.5" = "#E6C173", "SSP5-8.5" = "#855600")
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$approach, ellipse = TRUE, kind ="sd")
p <- Ordi_Obj$plot +
scale_color_manual(values = colors)
theme_bw()
p <- Ordi_Obj$plot +
scale_color_manual(values = colors) +
theme_bw()
p
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$scenario, ellipse = TRUE, kind ="sd")
p <- Ordi_Obj$plot +
scale_color_manual(values = colors) +
theme_bw()
p
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$scenario, ellipse = TRUE, kind ="sd", size = 1)
p <- Ordi_Obj$plot +
scale_color_manual(values = colors) +
theme_bw()
?gg_ordiplot
df_groups$approach
# Approach Theme
colors <- c("climate priority area" = "#E6BA7E", "feature" = "#4D3B2A", "penalty" = "#6984BF", "percentile" = "#2B8142")
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$approach, ellipse = TRUE, kind ="sd")
p <- Ordi_Obj$plot +
scale_color_manual(values = colors) +
theme_bw()
p
unique(df_groups$model)
# Ensemble Theme
colors <- c("EM" = "#FAF7B7", "CanESM5" = "#E6C173", "CMCC-ESM2" = "#855600", "GFDL-ESM4" = "#5075BA", "IPSL-CM6A-LR" = "#81B0CC", "NorESM2-MM" = "#5A9E67")
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$model, ellipse = TRUE, kind ="sd")
p <- Ordi_Obj$plot +
scale_color_manual(values = colors) +
theme_bw()
p
nique(df_groups$metric)
unique(df_groups$metric)
# Metrics theme
colors <- c("MHW_SumCumInt" = "#3C6342", "o2os" = "#289E3D", "phos" = "#E6C173", "tos" = "#81B0CC", "velocity" = "#855600")
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = TRUE, kind ="sd")
p <- Ordi_Obj$plot +
scale_color_manual(values = colors) +
theme_bw()
p
# Metrics theme
colors <- c("MHW_SumCumInt" = "#3C6342", "o2os" = "#289E3D", "phos" = "#E6C173", "tos" = "#81B0CC", "velocity" = "#855600")
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$metric, ellipse = TRUE, kind ="sd")
p_metric <- Ordi_Obj$plot +
scale_color_manual(values = colors) +
theme_bw()
p_metric
# Approach Theme
colors <- c("climate priority area" = "#E6BA7E", "feature" = "#4D3B2A", "penalty" = "#6984BF", "percentile" = "#2B8142")
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups$approach, ellipse = TRUE, kind ="sd")
p_approach <- Ordi_Obj$plot +
scale_color_manual(values = colors) +
theme_bw()
p_approach
p_metric + p_approach
df_groups[[ "scenario" ]]
# Scenario Theme
palette <- c("SSP1-2.6" = "#289E3D", "SSP2-4.5" = "#E6C173", "SSP5-8.5" = "#855600")
plotOrdination("scenario")
# ----- Plot ordinations -----
plotOrdination <- function(x, palette) {
Ordi_Obj <- gg_ordiplot(solution.mds, groups = df_groups[[ x ]], ellipse = TRUE, kind = "sd")
p <- Ordi_Obj$plot +
scale_color_manual(values = palette) +
theme_bw()
return(p)
}
plotOrdination("scenario")
# Scenario Theme
palette <- c("SSP1-2.6" = "#289E3D", "SSP2-4.5" = "#E6C173", "SSP5-8.5" = "#855600")
plotOrdination("scenario", palette)
plot <- plotOrdination("scenario", palette)
plot
ggsave("Figures/nMDS_scenario.png", plot = plot, height = 10, width = 10, dpi = 600)
# Ensemble Theme
colors <- c("EM" = "#FAF7B7", "CanESM5" = "#E6C173", "CMCC-ESM2" = "#855600", "GFDL-ESM4" = "#5075BA", "IPSL-CM6A-LR" = "#81B0CC", "NorESM2-MM" = "#5A9E67")
# Ensemble Theme
palette <- c("EM" = "#FAF7B7", "CanESM5" = "#E6C173", "CMCC-ESM2" = "#855600", "GFDL-ESM4" = "#5075BA", "IPSL-CM6A-LR" = "#81B0CC", "NorESM2-MM" = "#5A9E67")
plot <- plotOrdination("ensemble", palette)
plot <- plotOrdination("model", palette)
plot
ggsave("Figures/nMDS_ensemble.png", plot = plot, height = 10, width = 10, dpi = 600)
# Metrics theme
palette <- c("MHW_SumCumInt" = "#3C6342", "o2os" = "#289E3D", "phos" = "#E6C173", "tos" = "#81B0CC", "velocity" = "#855600")
plot <- plotOrdination("metric", palette)
plot
(plot <- plotOrdination("metric", palette))
ggsave("Figures/nmds_metric.png", plot = plot, height = 10, width = 10, dpi = 600)
# Approach Theme
palette <- c("climate priority area" = "#E6BA7E", "feature" = "#4D3B2A", "penalty" = "#6984BF", "percentile" = "#2B8142")
(plot <- plotOrdination("approach", palette))
ggsave("Figures/nmds_approach.png", plot = plot, height = 10, width = 10, dpi = 600)
