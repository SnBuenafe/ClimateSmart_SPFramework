plot_corrplot(., length(object_list)))
# Then
dev.off()
# manually save corrplot
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
# Initialize file path
file_path_test = "Correlation matrix.png"
png(height=800, width=800, file=file_path_test)#, type = "cairo")
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
# Then
dev.off()
matrix <- create_corrmatrix(object_list)
file_path_test = "Correlation matrix.png"
png(height=800, width=800, file=file_path_test, type = "cairo")
matrix <- create_corrmatrix(object_list)
# Your function to plot image goes here
corrplot(
matrix,
method = "number",
type = "lower",
title = "Regional Factor Correlation Matrix over history",
mar = c(0,0,1,0),
number.cex = 0.5,
number.digits = 2
)
corrplot(
matrix,
method = "number",
type = "lower",
title = "Regional Factor Correlation Matrix over history",
#mar = c(0,0,1,0),
number.cex = 0.5,
number.digits = 2
)
# Initialize file path
file_path_test = "Correlation matrix.png"
png(height=800, width=800, file=file_path_test, type = "cairo")
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
# Then
dev.off()
file_path_test = "Correlation matrix.png"
png(height=800, width=800, dpi = 400, file=file_path_test, type = "cairo")
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
# Then
dev.off()
file_path_test = "Correlation matrix.png"
png(height=800, width=800, res = 400, file=file_path_test, type = "cairo")
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
# Then
dev.off()
# Initialize file path
file_path_test = "Correlation matrix.png"
png(height=800, width=800, res = 1200, file=file_path_test, type = "cairo")
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
# Then
dev.off()
# Initialize file path
file_path_test = "Correlation matrix.png"
png(height=800, width=800, res = 200, file=file_path_test, type = "cairo")
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
# Then
dev.off()
# ----- Create selection frequency plot -----
sFreq <- create_LowRegretSf(solution_list, names, PUs)
saveRDS(sFreq, paste0(output_lowregret, "sFreq5-EM-Feature-585.rds")) # save low-regret solution
ggFreq <- plot_SelectionFrequency(sFreq, land) + ggtitle("Metric Theme", subtitle = "Feature (SSP 5-8.5)") + theme(axis.text = element_text(size = 25)) +
inset_element(plot_inset(sFreq), 0.7, 0.7, 0.99, 0.99)
ggsave(filename = "Freq-Feature-Ensemble-tos-585.png",
plot = ggFreq, width = 21, height = 29.7, dpi = 300,
path = "Figures/") # save plot
# Initialize file path
file_path_test = "Figures/CorrelationMatrix_Feature.png"
png(height=1000, width=1000, res = 200, file=file_path_test, type = "cairo")
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
# Then
dev.off()
file_path_test = "Figures/CorrelationMatrix_Feature.png"
png(height=1200, width=1200, res = 200, file=file_path_test, type = "cairo")
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
# Then
dev.off()
#### Approach Theme: Measuring climate-smart performance & Targets ####
names <- c("Feature", "Percentile", "Penalty", "Climate Priority Area")
group_name = "approach"
# Load summaries
load_summary <- function(metric, column) {
feature <- read_csv(paste0(output_summary, "MetricTheme_Feature_Summary.csv")) %>% dplyr::filter(grepl(metric, run)) %>% dplyr::select(!!sym(column), run)
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_Summary.csv")) %>% dplyr::filter(grepl(metric, run)) %>% dplyr::select(!!sym(column), run)
penalty <- read_csv(paste0(output_summary, "MetricTheme_Penalty_Summary.csv")) %>% dplyr::filter(grepl(metric, run)) %>% dplyr::select(!!sym(column), run)
climatePriorityArea <- read_csv(paste0(output_summary, "MetricTheme_ClimatePriorityArea_Summary.csv")) %>% dplyr::filter(grepl(metric, run)) %>% dplyr::select(!!sym(column), run)
climate <- bind_rows(feature, percentile, penalty, climatePriorityArea)
}
# Load feat_rep
load_featrep <- function(metric) {
feature <- read_csv(paste0(output_summary, "MetricApproachThemes_Feature_FeatureRepresentation.csv")) %>% dplyr::select(feature, contains(metric))
percentile <- read_csv(paste0(output_summary, "MetricTheme_Percentile_FeatureRepresentation.csv")) %>% dplyr::select(feature, contains(metric))
penalty <- read_csv(paste0(output_summary, "MetricApproachThemes_Penalty_FeatureRepresentation.csv")) %>% dplyr::select(feature, contains(metric))
climatePriorityArea <- read_csv(paste0(output_summary, "MetricApproachThemes_ClimatePriorityArea_FeatureRepresentation.csv")) %>% dplyr::select(feature, contains(metric))
feat_rep <- left_join(feature, percentile) %>%
left_join(., penalty) %>%
left_join(., climatePriorityArea)
}
# ----- Ocean acidification -----
# Measuring climate-smart performance
solution_list <- list(s7, s3, s11, s35)
list <- list() # empty list
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name)
}
df <- do.call(rbind, list)
climate <- load_summary("phos", "mean_ocean_acidification")
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, group = approach, fill = ..x..), scale = 1) +
scale_fill_viridis_c(name = expression('Δ pH yr'^"-1"*''), option = "A") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$mean_ocean_acidification,
linetype = "dashed", color = "tan1", size = 0.5) +
theme_classic()
ggsave(filename = "OceanAcidificationDist-ApproachTheme-phos.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Targets
x <- load_featrep("phos") %>%
dplyr::select(feature, contains("phos")) %>%
pivot_longer(!feature, names_to = "approach", values_to = "percent") %>%
dplyr::mutate(row_number = row_number(feature))
ggRidge <- ggplot(data = x) +
geom_density_ridges(aes(x = percent, y = approach, group = approach, fill = approach),
scale = 2) +
scale_fill_manual(values = c(`EM_ClimatePriorityArea_phos_585` = "#E6BA7E",
`EM_Feature_phos_585` = "#4D3B2A",
`EM_Penalty_phos_585` = "#6984BF",
`EM_Percentile_phos_585` = "#2B8142")) +
geom_vline(xintercept=c(30), linetype="dashed", color = "red", size = 1) +
xlim(c(min(x$percent), NA)) +
theme_classic()
ggsave(filename = "TargetDist-ApproachTheme-phos.png",
plot = ggRidge, width = 15, height = 10, dpi = 300,
path = "Figures/") # save plot
# ----- Ocean deoxygenation -----
solution_list <- list(s8, s4, s12, s36)
list <- list() # empty list
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name)
}
df <- do.call(rbind, list)
climate <- load_summary("o2os", "mean_oxygen_decline")
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, fill = ..x..), scale = 1) +
scale_fill_viridis_c(name = expression('Δ mol m'^"-3"*' yr'^"-1"*''), option = "D") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$mean_oxygen_decline,
linetype = "dashed", color = "black", size = 0.5) +
theme_classic()
ggsave(filename = "OxygenDeclineDist-ApproachTheme-o2os.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Targets
x <- load_featrep("o2os") %>%
dplyr::select(feature, contains("o2os")) %>%
pivot_longer(!feature, names_to = "approach", values_to = "percent") %>%
dplyr::mutate(row_number = row_number(feature))
ggRidge <- ggplot(data = x) +
geom_density_ridges(aes(x = percent, y = approach, group = approach, fill = approach),
scale = 2) +
scale_fill_manual(values = c(`EM_ClimatePriorityArea_o2os_585` = "#E6BA7E",
`EM_Feature_o2os_585` = "#4D3B2A",
`EM_Penalty_o2os_585` = "#6984BF",
`EM_Percentile_o2os_585` = "#2B8142")) +
geom_vline(xintercept=c(30), linetype="dashed", color = "red", size = 1) +
xlim(c(min(x$percent), NA)) +
theme_classic()
ggsave(filename = "TargetDist-ApproachTheme-o2os.png",
plot = ggRidge, width = 15, height = 10, dpi = 300,
path = "Figures/") # save plot
# ----- Climate velocity -----
solution_list <- list(s9, s5, s13, s37)
list <- list() # empty list
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name)
}
df <- do.call(rbind, list)
climate <- load_summary("velocity", "median_velocity")
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, fill = ..x..), scale = 1) +
scale_fill_distiller(name = expression('km yr'^"-1"*''), palette = "RdYlBu") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$median_velocity,
linetype = "dashed", color = "khaki3", size = 0.5) +
theme_classic()
ggsave(filename = "ClimateVelocityDist-ApproachTheme-velocity.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Targets
x <- load_featrep("velocity") %>%
dplyr::select(feature, contains("velocity")) %>%
pivot_longer(!feature, names_to = "approach", values_to = "percent") %>%
dplyr::mutate(row_number = row_number(feature))
ggRidge <- ggplot(data = x) +
geom_density_ridges(aes(x = percent, y = approach, group = approach, fill = approach),
scale = 2) +
scale_fill_manual(values = c(`EM_ClimatePriorityArea_velocity_585` = "#E6BA7E",
`EM_Feature_velocity_585` = "#4D3B2A",
`EM_Penalty_velocity_585` = "#6984BF",
`EM_Percentile_velocity_585` = "#2B8142")) +
geom_vline(xintercept=c(30), linetype="dashed", color = "red", size = 1) +
xlim(c(min(x$percent), NA)) +
theme_classic()
ggsave(filename = "TargetDist-ApproachTheme-velocity.png",
plot = ggRidge, width = 15, height = 10, dpi = 300,
path = "Figures/") # save plot
# ----- MHW intensity -----
solution_list <- list(s291, s290, s292, s293)
list <- list() # empty list
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name)
}
df <- do.call(rbind, list)
climate <- load_summary("MHW", "mean_sum_cumulative_intensity")
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, fill = ..x..), scale = 1) +
scale_fill_viridis_c(name = expression('total degree days'), option = "G") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$mean_sum_cumulative_intensity,
linetype = "dashed", color = "khaki3", size = 0.5) +
theme_classic()
ggsave(filename = "MHWSumCumIntDist-ApproachTheme-MHW_SumCumInt.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Targets
x <- load_featrep("MHW_SumCumInt") %>%
dplyr::select(feature, contains("MHW_SumCumInt")) %>%
pivot_longer(!feature, names_to = "approach", values_to = "percent") %>%
dplyr::mutate(row_number = row_number(feature))
ggRidge <- ggplot(data = x) +
geom_density_ridges(aes(x = percent, y = approach, group = approach, fill = approach),
scale = 2) +
scale_fill_manual(values = c(`EM_ClimatePriorityArea_MHW_SumCumInt_585` = "#E6BA7E",
`EM_Feature_MHW_SumCumInt_585` = "#4D3B2A",
`EM_Penalty_MHW_SumCumInt_585` = "#6984BF",
`EM_Percentile_MHW_SumCumInt_585` = "#2B8142")) +
geom_vline(xintercept=c(30), linetype="dashed", color = "red", size = 1) +
xlim(c(min(x$percent), NA)) +
theme_classic()
ggsave(filename = "TargetDist-ApproachTheme-o2os.png",
plot = ggRidge, width = 15, height = 10, dpi = 300,
path = "Figures/") # save plot
s5 <- read_rds("Output/solutions/s5-EM-Percentile-velocity-585.rds")
s13 <- read_rds("Output/solutions/s13-EM-Penalty-velocity-585.rds")
s37 <- read_rds("Output/solutions/s37-EM-ClimatePriorityArea-velocity-585.rds")
solution_list <- list(s9, s5, s13, s37)
list <- list() # empty list
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name)
}
df <- do.call(rbind, list)
climate <- load_summary("velocity", "median_velocity")
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, fill = ..x..), scale = 1) +
scale_fill_distiller(name = expression('km yr'^"-1"*''), palette = "RdYlBu") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$median_velocity,
linetype = "dashed", color = "khaki3", size = 0.5) +
theme_classic()
ggsave(filename = "ClimateVelocityDist-ApproachTheme-velocity.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Targets
x <- load_featrep("velocity") %>%
dplyr::select(feature, contains("velocity")) %>%
pivot_longer(!feature, names_to = "approach", values_to = "percent") %>%
dplyr::mutate(row_number = row_number(feature))
ggRidge <- ggplot(data = x) +
geom_density_ridges(aes(x = percent, y = approach, group = approach, fill = approach),
scale = 2) +
scale_fill_manual(values = c(`EM_ClimatePriorityArea_velocity_585` = "#E6BA7E",
`EM_Feature_velocity_585` = "#4D3B2A",
`EM_Penalty_velocity_585` = "#6984BF",
`EM_Percentile_velocity_585` = "#2B8142")) +
geom_vline(xintercept=c(30), linetype="dashed", color = "red", size = 1) +
xlim(c(min(x$percent), NA)) +
theme_classic()
ggsave(filename = "TargetDist-ApproachTheme-velocity.png",
plot = ggRidge, width = 15, height = 10, dpi = 300,
path = "Figures/") # save plot
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, fill = ..x..), scale = 1) +
scale_fill_distiller(name = expression('km yr'^"-1"*''), palette = "RdYlBu") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$median_velocity,
linetype = "dashed", color = "khaki3", size = 0.5) +
theme_classic()
ggsave(filename = "ClimateVelocityDist-ApproachTheme-velocity.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
s3 <- read_rds("Outputs/solutions/s3-EM-Percentile-phos-585.rds")
s3 <- read_rds("Output/solutions/s3-EM-Percentile-phos-585.rds")
s11 <- read_rds("Output/solutions/s11-EM-Penalty-phos-585.rds")
s35 <- read_rds("Output/solutions/s35-EM-ClimatePriorityArea-phos-585.rds")
solution_list <- list(s7, s3, s11, s35)
list <- list() # empty list
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name)
}
df <- do.call(rbind, list)
climate <- load_summary("phos", "mean_ocean_acidification")
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, group = approach, fill = ..x..), scale = 1) +
scale_fill_viridis_c(name = expression('Δ pH yr'^"-1"*''), option = "A") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$mean_ocean_acidification,
linetype = "dashed", color = "tan1", size = 0.5) +
theme_classic()
ggsave(filename = "OceanAcidificationDist-ApproachTheme-phos.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
s291 <- read_rds("Output/solution/s291-EM-Feature-MHW_SumCumInt-585.rds")
s291 <- read_rds("Output/solutions/s291-EM-Feature-MHW_SumCumInt-585.rds")
s290 <- read_rds("Output/solution/s290-EM-Percentile-MHW_SumCumInt-585.rds")
s290 <- read_rds("Output/solutions/s290-EM-Percentile-MHW_SumCumInt-585.rds")
gc(9)
gc(9)
gc()
s290 <- read_rds("Output/solutions/s290-EM-Percentile-MHW_SumCumInt-585.rds")
s290 <- read_rds("Output/solutions/s290-EM-Percentile-MHW_SumCumInt-585.rds")
gc()
s290 <- read_rds("Output/solutions/s290-EM-Percentile-MHW_SumCumInt-585.rds")
solution_list <- list(s7, s3, s11, s35)
list <- list() # empty list
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name)
}
df <- do.call(rbind, list)
climate <- load_summary("phos", "mean_ocean_acidification")
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, group = approach, fill = ..x..), scale = 1) +
scale_fill_viridis_c(name = expression('Δ pH yr'^"-1"*''), option = "A") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$mean_ocean_acidification,
linetype = "dashed", color = "tan1", size = 0.5) +
theme_classic()
ggsave(filename = "OceanAcidificationDist-ApproachTheme-phos.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Targets
x <- load_featrep("phos") %>%
dplyr::select(feature, contains("phos")) %>%
pivot_longer(!feature, names_to = "approach", values_to = "percent") %>%
dplyr::mutate(row_number = row_number(feature))
ggRidge <- ggplot(data = x) +
geom_density_ridges(aes(x = percent, y = approach, group = approach, fill = approach),
scale = 2) +
scale_fill_manual(values = c(`EM_ClimatePriorityArea_phos_585` = "#E6BA7E",
`EM_Feature_phos_585` = "#4D3B2A",
`EM_Penalty_phos_585` = "#6984BF",
`EM_Percentile_phos_585` = "#2B8142")) +
geom_vline(xintercept=c(30), linetype="dashed", color = "red", size = 1) +
xlim(c(min(x$percent), NA)) +
theme_classic()
ggsave(filename = "TargetDist-ApproachTheme-phos.png",
plot = ggRidge, width = 15, height = 10, dpi = 300,
path = "Figures/") # save plot
solution_list <- list(s9, s5, s13, s37)
list <- list() # empty list
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name)
}
df <- do.call(rbind, list)
climate <- load_summary("velocity", "median_velocity")
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, fill = ..x..), scale = 1) +
scale_fill_distiller(name = expression('km yr'^"-1"*''), palette = "RdYlBu") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$median_velocity,
linetype = "dashed", color = "khaki3", size = 0.5) +
theme_classic()
ggsave(filename = "ClimateVelocityDist-ApproachTheme-velocity.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Targets
x <- load_featrep("velocity") %>%
dplyr::select(feature, contains("velocity")) %>%
pivot_longer(!feature, names_to = "approach", values_to = "percent") %>%
dplyr::mutate(row_number = row_number(feature))
ggRidge <- ggplot(data = x) +
geom_density_ridges(aes(x = percent, y = approach, group = approach, fill = approach),
scale = 2) +
scale_fill_manual(values = c(`EM_ClimatePriorityArea_velocity_585` = "#E6BA7E",
`EM_Feature_velocity_585` = "#4D3B2A",
`EM_Penalty_velocity_585` = "#6984BF",
`EM_Percentile_velocity_585` = "#2B8142")) +
geom_vline(xintercept=c(30), linetype="dashed", color = "red", size = 1) +
xlim(c(min(x$percent), NA)) +
theme_classic()
ggsave(filename = "TargetDist-ApproachTheme-velocity.png",
plot = ggRidge, width = 15, height = 10, dpi = 300,
path = "Figures/") # save plot
rm(s9, s5, s13, s37)
rm(s7, s3, s11, s35)
rm(ggSol6, ggSol7, ggSol8, ggSol9)
rm(p6, p7, p8, p9)
gc()
s290 <- read_rds("Output/solutions/s290-EM-Percentile-MHW_SumCumInt-585.rds")
s292 <- read_rds("Output/solutions/s292-EM-Penalty-MHW_SumCumInt-585.rds")
s293 <- read_rds("Output/solutions/s293-EM-ClimatePriorityArea-MHW_SumCumInt-585.rds")
solution_list <- list(s291, s290, s292, s293)
list <- list() # empty list
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name)
}
df <- do.call(rbind, list)
climate <- load_summary("MHW", "mean_sum_cumulative_intensity")
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, fill = ..x..), scale = 1) +
scale_fill_viridis_c(name = expression('total degree days'), option = "G") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$mean_sum_cumulative_intensity,
linetype = "dashed", color = "khaki3", size = 0.5) +
theme_classic()
ggsave(filename = "MHWSumCumIntDist-ApproachTheme-MHW_SumCumInt.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Targets
x <- load_featrep("MHW_SumCumInt") %>%
dplyr::select(feature, contains("MHW_SumCumInt")) %>%
pivot_longer(!feature, names_to = "approach", values_to = "percent") %>%
dplyr::mutate(row_number = row_number(feature))
ggRidge <- ggplot(data = x) +
geom_density_ridges(aes(x = percent, y = approach, group = approach, fill = approach),
scale = 2) +
scale_fill_manual(values = c(`EM_ClimatePriorityArea_MHW_SumCumInt_585` = "#E6BA7E",
`EM_Feature_MHW_SumCumInt_585` = "#4D3B2A",
`EM_Penalty_MHW_SumCumInt_585` = "#6984BF",
`EM_Percentile_MHW_SumCumInt_585` = "#2B8142")) +
geom_vline(xintercept=c(30), linetype="dashed", color = "red", size = 1) +
xlim(c(min(x$percent), NA)) +
theme_classic()
ggsave(filename = "TargetDist-ApproachTheme-o2os.png",
plot = ggRidge, width = 15, height = 10, dpi = 300,
path = "Figures/") # save plot
s8 <- read_rds("Output/solutions/s8-EM-Feature-o2os-585.rds")
s4 <- read_rds("Output/solutions/s4-EM-Percentile-o2os-585.rds")
s12 <- read_rds("Output/solutions/s12-EM-Penalty-o2os-585.rds")
s36 <- read_rds("Output/solutions/s36-EM-ClimatePriorityArea-o2os-585.rds")
solution_list <- list(s8, s4, s12, s36)
list <- list() # empty list
for(i in 1:length(names)) {
list[[i]] <- make_kernel(solution_list[[i]], names[i], group_name)
}
df <- do.call(rbind, list)
climate <- load_summary("o2os", "mean_oxygen_decline")
ggRidge <- ggplot() +
geom_density_ridges_gradient(data = df %>% dplyr::filter(solution_1 == 1), aes(x = transformed, y = approach, fill = ..x..), scale = 1) +
scale_fill_viridis_c(name = expression('Δ mol m'^"-3"*' yr'^"-1"*''), option = "D") +
geom_density_ridges(data = df %>% dplyr::filter(solution_1 == 0), aes(x = transformed, y = approach), alpha = 0.25, linetype = "dotted", scale = 1) +
geom_vline(xintercept = climate$mean_oxygen_decline,
linetype = "dashed", color = "black", size = 0.5) +
theme_classic()
ggsave(filename = "OxygenDeclineDist-ApproachTheme-o2os.png",
plot = ggRidge, width = 10, height = 6, dpi = 300,
path = "Figures/") # save plot
# Targets
x <- load_featrep("o2os") %>%
dplyr::select(feature, contains("o2os")) %>%
pivot_longer(!feature, names_to = "approach", values_to = "percent") %>%
dplyr::mutate(row_number = row_number(feature))
ggRidge <- ggplot(data = x) +
geom_density_ridges(aes(x = percent, y = approach, group = approach, fill = approach),
scale = 2) +
scale_fill_manual(values = c(`EM_ClimatePriorityArea_o2os_585` = "#E6BA7E",
`EM_Feature_o2os_585` = "#4D3B2A",
`EM_Penalty_o2os_585` = "#6984BF",
`EM_Percentile_o2os_585` = "#2B8142")) +
geom_vline(xintercept=c(30), linetype="dashed", color = "red", size = 1) +
xlim(c(min(x$percent), NA)) +
theme_classic()
ggsave(filename = "TargetDist-ApproachTheme-o2os.png",
plot = ggRidge, width = 15, height = 10, dpi = 300,
path = "Figures/") # save plot
gc()
rm(s293, s292, s290, s291)
rm(s8_plot, s9_plot)
rm(s6_plot, s7_plot)
gc()
rm(s6)
rm(s291_plot)
gc()
s36 <- read_rds("Output/solutions/s36-EM-ClimatePriorityArea-o2os-585.rds")
rm(roc_phos_SSP585)
rm(roc_tos_SSP585)
rm(p291)
gc()
s36 <- read_rds("Output/solutions/s36-EM-ClimatePriorityArea-o2os-585.rds")
gc()
s36 <- read_rds("Output/solutions/s36-EM-ClimatePriorityArea-o2os-585.rds")
(matrix <- create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list)))
s36 <- read_rds("Output/solutions/s36-EM-ClimatePriorityArea-o2os-585.rds")
matrix
create_corrmatrix(object_list) %>%
plot_corrplot(., length(object_list))
s36 <- read_rds("Output/solutions/s36-EM-ClimatePriorityArea-o2os-585.rds")
s36 <- read_rds("Output/solutions/s36-EM-ClimatePriorityArea-o2os-585.rds")
